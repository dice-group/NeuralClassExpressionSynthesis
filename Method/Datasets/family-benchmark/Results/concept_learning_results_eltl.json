{
   "F-measure": [
      0.6667000000000001,
      0.8321,
      0.7292000000000001,
      0.8387,
      0.4697,
      0.48119999999999996,
      0.8437,
      0.8695999999999999,
      0.6667000000000001,
      1.0,
      0.6667000000000001,
      0.6667000000000001,
      0.5106,
      0.8,
      0.5394,
      0.39039999999999997,
      0.6667000000000001,
      1.0,
      0.6667000000000001,
      1.0,
      1.0,
      0.4869,
      1.0,
      1.0,
      0.5859000000000001,
      0.6667000000000001,
      0.7292000000000001,
      0.6835,
      0.6835,
      0.8598,
      1.0,
      0.9523999999999999,
      0.75,
      0.4341,
      0.6,
      0.6667000000000001,
      1.0,
      0.7292000000000001,
      0.6667000000000001,
      0.6667000000000001,
      0.7872,
      0.7545000000000001,
      0.9515,
      0.6667000000000001,
      0.3237,
      0.7292000000000001,
      0.6667000000000001,
      0.7292000000000001,
      0.8484999999999999,
      0.9655,
      0.8058,
      0.6667000000000001,
      0.6667000000000001,
      0.521,
      0.6592,
      0.8058,
      0.8623999999999999,
      0.7890999999999999,
      0.6667000000000001,
      0.8437,
      0.7292000000000001,
      1.0,
      0.6667000000000001,
      0.4755,
      0.7606,
      1.0,
      0.7292000000000001,
      0.8234999999999999,
      0.8254,
      0.33740000000000003,
      0.6667000000000001,
      1.0,
      0.8031,
      0.7292000000000001,
      1.0,
      0.6812999999999999,
      0.8571,
      0.6667000000000001,
      0.7292000000000001,
      0.7317,
      0.6667000000000001,
      0.4697,
      0.48119999999999996,
      0.5394,
      0.4341,
      0.8181999999999999,
      0.6667000000000001,
      0.6835,
      0.6667000000000001,
      0.6667000000000001,
      0.3644,
      0.45799999999999996,
      0.6667000000000001,
      0.4697,
      0.7292000000000001,
      0.716,
      0.6667000000000001,
      0.428,
      0.9375,
      0.9231,
      0.7292000000000001,
      1.0,
      0.8955,
      0.7519,
      0.8787999999999999,
      0.7619,
      0.7,
      0.9706,
      0.4869,
      0.6517000000000001,
      0.9278,
      0.6667000000000001,
      0.8269,
      1.0,
      1.0,
      0.9854,
      0.7292000000000001,
      0.6667000000000001,
      0.8406,
      0.5655,
      1.0,
      0.6667000000000001,
      0.3333,
      0.716,
      0.6667000000000001,
      0.5394,
      0.7292000000000001,
      0.875,
      1.0,
      1.0,
      0.6667000000000001,
      0.6667000000000001,
      0.75,
      0.8125,
      0.8406,
      0.6667000000000001,
      0.4,
      0.7292000000000001,
      0.5753,
      1.0,
      0.6667000000000001,
      0.6667000000000001,
      0.6667000000000001,
      0.6667000000000001,
      0.8656999999999999,
      0.3644,
      0.8946999999999999,
      0.7619,
      0.8837,
      0.6667000000000001,
      0.4032,
      0.6667000000000001,
      1.0,
      0.4869,
      0.7,
      0.6517000000000001,
      0.6757,
      0.6667000000000001,
      0.4639,
      0.428,
      0.6667000000000001,
      1.0,
      1.0,
      0.7292000000000001,
      0.5455,
      0.8269,
      0.863,
      0.7292000000000001,
      0.8732,
      0.8695999999999999,
      0.7097,
      0.4755,
      0.5272,
      0.6667000000000001,
      0.5394,
      0.4211,
      0.6667000000000001,
      0.44020000000000004,
      0.4755,
      1.0,
      1.0,
      0.8571,
      0.44020000000000004,
      0.6667000000000001,
      1.0,
      0.7545000000000001,
      0.384,
      0.6667000000000001,
      0.716,
      0.6667000000000001,
      0.7317,
      0.875,
      1.0,
      0.6667000000000001,
      0.7292000000000001,
      0.6667000000000001,
      0.4697,
      0.6667000000000001,
      0.4219,
      0.5394
   ],
   "Accuracy": [
      0.5,
      0.8861,
      0.6286999999999999,
      0.9752,
      0.3069,
      0.31679999999999997,
      0.9505,
      0.9851000000000001,
      0.5,
      1.0,
      0.5,
      0.5,
      0.7723,
      0.9009999999999999,
      0.45049999999999996,
      0.2426,
      0.5,
      1.0,
      0.5,
      1.0,
      1.0,
      0.3218,
      1.0,
      1.0,
      0.797,
      0.5,
      0.6286999999999999,
      0.7525,
      0.7525,
      0.9257,
      1.0,
      0.9802,
      0.8416,
      0.2772,
      0.7228,
      0.5,
      1.0,
      0.6286999999999999,
      0.5,
      0.5,
      0.9009999999999999,
      0.797,
      0.9752,
      0.5,
      0.1931,
      0.6286999999999999,
      0.5,
      0.6286999999999999,
      0.9009999999999999,
      0.9901000000000001,
      0.8663,
      0.5,
      0.5,
      0.43560000000000004,
      0.698,
      0.8663,
      0.9257,
      0.8465,
      0.5,
      0.9505,
      0.6286999999999999,
      1.0,
      0.5,
      0.3119,
      0.8317,
      1.0,
      0.6286999999999999,
      0.8812000000000001,
      0.9455,
      0.203,
      0.5,
      1.0,
      0.8762000000000001,
      0.6286999999999999,
      1.0,
      0.7129000000000001,
      0.9901000000000001,
      0.5,
      0.6286999999999999,
      0.7822,
      0.5,
      0.3069,
      0.31679999999999997,
      0.45049999999999996,
      0.2772,
      0.9802,
      0.5,
      0.7525,
      0.5,
      0.5,
      0.2228,
      0.297,
      0.9802,
      0.3069,
      0.6286999999999999,
      0.7723,
      0.5,
      0.2723,
      0.9901000000000001,
      0.9851000000000001,
      0.6286999999999999,
      1.0,
      0.9653,
      0.8366,
      0.9604,
      0.802,
      0.7624,
      0.9901000000000001,
      0.3218,
      0.6931,
      0.9653,
      0.5,
      0.9109,
      1.0,
      1.0,
      0.9851000000000001,
      0.6286999999999999,
      0.5,
      0.8911,
      0.6881,
      1.0,
      0.5,
      0.9802,
      0.7723,
      0.5,
      0.45049999999999996,
      0.6286999999999999,
      0.9208,
      1.0,
      1.0,
      0.5,
      0.5,
      0.8416,
      0.8812000000000001,
      0.8911,
      0.5,
      0.9406,
      0.6286999999999999,
      0.6931,
      1.0,
      0.5,
      0.5,
      0.5,
      0.5,
      0.9109,
      0.2228,
      0.9604,
      0.802,
      0.9257,
      0.5,
      0.2525,
      0.5,
      1.0,
      0.3218,
      0.7624,
      0.6931,
      0.7624,
      0.5,
      0.302,
      0.2723,
      0.5,
      1.0,
      1.0,
      0.6286999999999999,
      0.6286999999999999,
      0.9109,
      0.9009999999999999,
      0.6286999999999999,
      0.9109,
      0.9851000000000001,
      0.8218000000000001,
      0.3119,
      0.44060000000000005,
      0.5,
      0.45049999999999996,
      0.5644,
      0.5,
      0.2822,
      0.3119,
      1.0,
      1.0,
      0.9356,
      0.2822,
      0.5,
      1.0,
      0.797,
      0.2376,
      0.5,
      0.7723,
      0.5,
      0.7822,
      0.9208,
      1.0,
      0.5,
      0.6286999999999999,
      0.5,
      0.3069,
      0.5,
      0.2673,
      0.45049999999999996
   ],
   "Runtime": [
      4.282831430435181,
      123.99774312973022,
      4.128862142562866,
      125.32557535171509,
      5.708484888076782,
      4.8513171672821045,
      126.82891035079956,
      134.3181037902832,
      4.332513809204102,
      3.906101703643799,
      3.3060030937194824,
      3.222923517227173,
      123.91643619537354,
      124.8676700592041,
      4.804653882980347,
      4.738629102706909,
      4.250809669494629,
      4.70508074760437,
      4.646482944488525,
      5.341146945953369,
      3.6869633197784424,
      3.4092209339141846,
      6.481729745864868,
      4.304303884506226,
      124.04669308662415,
      4.749536752700806,
      4.611048698425293,
      123.8005633354187,
      124.1610836982727,
      124.07458901405334,
      9.155129432678223,
      124.9852283000946,
      124.56678748130798,
      3.8803372383117676,
      3.831815004348755,
      3.777951717376709,
      4.080353021621704,
      4.388312816619873,
      3.700410842895508,
      3.8509111404418945,
      124.76806020736694,
      4.376734495162964,
      125.63648438453674,
      5.166551113128662,
      5.1131432056427,
      6.215620040893555,
      5.786232948303223,
      5.972957611083984,
      124.55766701698303,
      123.85887432098389,
      129.13389921188354,
      3.3623359203338623,
      3.845365524291992,
      4.076071739196777,
      124.72024035453796,
      127.25068068504333,
      124.47068452835083,
      126.35571646690369,
      3.6836612224578857,
      127.77049660682678,
      3.630282163619995,
      4.489883661270142,
      3.825759172439575,
      3.5152456760406494,
      127.89768123626709,
      4.14081597328186,
      3.875847816467285,
      126.14873385429382,
      125.46231985092163,
      3.887385606765747,
      4.226066589355469,
      4.376836776733398,
      126.16007018089294,
      3.7909884452819824,
      5.220189809799194,
      124.5118248462677,
      124.45374608039856,
      3.784254550933838,
      4.1963794231414795,
      3.9541573524475098,
      3.9804482460021973,
      4.452880859375,
      5.556287527084351,
      4.989436626434326,
      4.951664686203003,
      125.25656223297119,
      3.255411148071289,
      124.22286081314087,
      3.8495595455169678,
      3.791799783706665,
      3.9027817249298096,
      4.4064202308654785,
      125.624520778656,
      3.2927539348602295,
      3.6155014038085938,
      123.79580426216125,
      3.5172386169433594,
      3.550729990005493,
      123.98971962928772,
      125.62202668190002,
      3.6012394428253174,
      5.575701713562012,
      126.59244799613953,
      127.13669395446777,
      124.79862380027771,
      124.67417097091675,
      4.252915859222412,
      134.15821170806885,
      3.627079486846924,
      125.77801251411438,
      123.86965107917786,
      3.712459087371826,
      124.27132940292358,
      3.412806749343872,
      3.6353893280029297,
      124.62250185012817,
      5.535794734954834,
      5.392329454421997,
      127.68448829650879,
      3.9524950981140137,
      11.129757404327393,
      3.6667964458465576,
      124.43548893928528,
      124.1195125579834,
      3.8328135013580322,
      3.462073802947998,
      3.4596283435821533,
      123.76422452926636,
      13.322490930557251,
      5.458951950073242,
      4.974722385406494,
      4.0581817626953125,
      124.33066892623901,
      125.4562816619873,
      125.46210765838623,
      3.9081990718841553,
      131.26075983047485,
      4.481604099273682,
      3.552044153213501,
      24.839536666870117,
      3.8162224292755127,
      3.5727219581604004,
      4.2967236042022705,
      3.79813814163208,
      124.84167194366455,
      4.089796781539917,
      124.18124175071716,
      125.27689576148987,
      124.55398416519165,
      3.7533812522888184,
      4.249044179916382,
      3.8960869312286377,
      3.931520938873291,
      3.4152677059173584,
      124.28376698493958,
      124.65444231033325,
      3.7928097248077393,
      3.4694225788116455,
      4.117529630661011,
      3.986891508102417,
      3.740553855895996,
      4.261988639831543,
      4.096939325332642,
      3.6444904804229736,
      125.04283857345581,
      125.20281958580017,
      132.49112677574158,
      3.9512522220611572,
      125.13824081420898,
      125.03647661209106,
      125.32815170288086,
      3.378321647644043,
      3.382124185562134,
      3.334658145904541,
      3.431220531463623,
      123.86290144920349,
      3.261683702468872,
      3.4959189891815186,
      3.6585376262664795,
      3.688673734664917,
      6.447965860366821,
      124.03978037834167,
      3.5583243370056152,
      3.4942288398742676,
      3.8928191661834717,
      124.08694100379944,
      3.2623116970062256,
      3.461859941482544,
      124.5470769405365,
      3.763423204421997,
      124.14945936203003,
      124.3971688747406,
      3.6177661418914795,
      3.4790477752685547,
      3.359586477279663,
      3.2930192947387695,
      3.317261219024658,
      3.3724279403686523,
      3.3132660388946533,
      3.409451484680176
   ],
   "Prediction": [
      "⊤",
      "∃ hasParent.Child",
      "∃ married.⊤",
      "Son ⊓ (∃ hasParent.(∃ hasChild.(Male ⊓ Parent))) ⊓ (∃ hasSibling.⊤)",
      "⊤",
      "⊤",
      "Granddaughter",
      "Granddaughter ⊓ (∃ hasParent.Grandmother) ⊓ (∃ hasParent.(Female ⊓ (∃ hasSibling.⊤)))",
      "⊤",
      "(∃ hasParent.(Male ⊓ (∃ hasSibling.⊤))) ⊓ (∃ hasSibling.⊤)",
      "⊤",
      "⊤",
      "∃ hasChild.Parent",
      "Male ⊓ Parent",
      "∃ married.⊤",
      "⊤",
      "⊤",
      "(∃ hasSibling.Grandson) ⊓ (∃ hasSibling.(Male ⊓ (∃ hasChild.PersonWithASibling)))",
      "⊤",
      "(∃ hasParent.((∃ hasChild.⊤) ⊓ (∃ hasSibling.Parent))) ⊓ (∃ hasParent.(∃ hasChild.Parent))",
      "Granddaughter ⊓ (∃ hasParent.(∃ hasParent.Child))",
      "⊤",
      "Son ⊓ (∃ hasSibling.(Father ⊓ (∃ hasChild.⊤))) ⊓ (∃ hasSibling.(Male ⊓ (∃ hasChild.Male)))",
      "(∃ hasParent.(∃ hasParent.Child)) ⊓ (∃ hasSibling.⊤)",
      "∃ hasChild.Parent",
      "⊤",
      "∃ married.⊤",
      "Child",
      "Child",
      "(∃ hasParent.(∃ hasChild.Male)) ⊓ (∃ hasSibling.⊤)",
      "(∃ hasParent.(Grandson ⊓ (∃ hasChild.⊤) ⊓ (∃ hasParent.⊤))) ⊓ (∃ hasParent.(∃ hasChild.Male)) ⊓ (∃ hasSibling.⊤)",
      "(∃ hasParent.((∃ hasChild.⊤) ⊓ (∃ hasSibling.⊤))) ⊓ (∃ hasParent.(∃ hasChild.Male))",
      "∃ hasParent.Child",
      "⊤",
      "Female",
      "⊤",
      "Granddaughter ⊓ (∃ hasParent.(∃ hasSibling.Granddaughter))",
      "∃ married.⊤",
      "⊤",
      "⊤",
      "∃ hasParent.PersonWithASibling",
      "Male",
      "(∃ hasParent.Child) ⊓ (∃ married.⊤)",
      "⊤",
      "⊤",
      "∃ married.⊤",
      "⊤",
      "∃ married.⊤",
      "∃ hasParent.(∃ hasChild.Female)",
      "Male ⊓ (∃ hasSibling.⊤)",
      "∃ hasParent.(∃ hasChild.Male)",
      "⊤",
      "⊤",
      "∃ married.⊤",
      "Parent",
      "∃ hasParent.(∃ hasChild.Male)",
      "(∃ hasParent.((∃ hasChild.⊤) ⊓ (∃ hasParent.⊤))) ⊓ (∃ hasParent.(∃ hasChild.Male))",
      "(∃ hasParent.((∃ hasChild.⊤) ⊓ (∃ married.⊤))) ⊓ (∃ hasParent.(∃ hasChild.(∃ married.⊤)))",
      "⊤",
      "Granddaughter",
      "∃ married.⊤",
      "(∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.⊤))) ⊓ (∃ hasParent.(∃ hasSibling.Female)) ⊓ (∃ hasSibling.⊤)",
      "⊤",
      "⊤",
      "Female ⊓ (∃ married.⊤)",
      "(∃ hasChild.Female) ⊓ (∃ hasChild.((∃ hasChild.⊤) ⊓ (∃ hasSibling.⊤))) ⊓ (∃ hasParent.(∃ hasParent.⊤))",
      "∃ married.⊤",
      "∃ hasParent.Child",
      "Granddaughter",
      "⊤",
      "⊤",
      "(∃ hasSibling.(Grandson ⊓ (∃ hasSibling.⊤))) ⊓ (∃ hasSibling.(∃ hasSibling.Female))",
      "∃ hasParent.(∃ hasChild.Female)",
      "∃ married.⊤",
      "(∃ hasChild.(∃ hasChild.⊤)) ⊓ (∃ hasParent.(∃ hasChild.Male))",
      "Parent",
      "Granddaughter ⊓ (∃ hasChild.⊤) ⊓ (∃ hasParent.PersonWithASibling) ⊓ (∃ hasSibling.⊤)",
      "⊤",
      "∃ married.⊤",
      "Male",
      "⊤",
      "⊤",
      "⊤",
      "∃ married.⊤",
      "⊤",
      "Granddaughter ⊓ Mother",
      "⊤",
      "Child",
      "⊤",
      "⊤",
      "⊤",
      "⊤",
      "Male ⊓ (∃ hasChild.Grandson) ⊓ (∃ married.Granddaughter) ⊓ (∃ married.Sister)",
      "⊤",
      "∃ married.⊤",
      "Child",
      "⊤",
      "⊤",
      "Granddaughter ⊓ (∃ hasSibling.(Son ⊓ (∃ hasSibling.⊤))) ⊓ (∃ hasSibling.(∃ hasSibling.(∃ married.⊤)))",
      "Granddaughter ⊓ (∃ hasParent.(∃ hasSibling.Male))",
      "∃ married.⊤",
      "Granddaughter ⊓ (∃ hasParent.Grandfather) ⊓ (∃ hasParent.(Male ⊓ (∃ hasParent.⊤))) ⊓ (∃ hasSibling.⊤)",
      "Granddaughter",
      "∃ hasParent.(∃ hasChild.Male)",
      "Granddaughter",
      "Child",
      "Male",
      "(∃ hasSibling.(Female ⊓ (∃ hasSibling.Female))) ⊓ (∃ hasSibling.(Sister ⊓ (∃ hasSibling.⊤)))",
      "⊤",
      "Parent",
      "Child ⊓ Female",
      "⊤",
      "(∃ hasParent.(∃ hasChild.Male)) ⊓ (∃ hasSibling.⊤)",
      "Granddaughter ⊓ (∃ married.⊤)",
      "Male ⊓ Parent ⊓ (∃ hasSibling.Male)",
      "Child",
      "∃ married.⊤",
      "⊤",
      "∃ hasParent.Child",
      "Male",
      "(∃ hasSibling.(Sister ⊓ (∃ hasChild.⊤) ⊓ (∃ hasSibling.⊤))) ⊓ (∃ hasSibling.(∃ hasSibling.Male))",
      "⊤",
      "Granddaughter ⊓ (∃ hasChild.Male) ⊓ (∃ hasSibling.Female)",
      "Child",
      "⊤",
      "∃ married.⊤",
      "∃ married.⊤",
      "PersonWithASibling",
      "(∃ hasSibling.(Female ⊓ (∃ hasChild.Female))) ⊓ (∃ hasSibling.(Granddaughter ⊓ Grandmother ⊓ (∃ hasChild.Brother)))",
      "Male ⊓ (∃ hasChild.(∃ hasSibling.⊤)) ⊓ (∃ married.Child)",
      "⊤",
      "⊤",
      "∃ hasParent.Child",
      "∃ hasParent.(∃ hasChild.Female)",
      "∃ hasParent.Child",
      "⊤",
      "Male ⊓ (∃ hasParent.(∃ hasSibling.Female)) ⊓ (∃ hasParent.(∃ hasSibling.Male))",
      "∃ married.⊤",
      "Male",
      "(∃ hasParent.(∃ hasParent.Child)) ⊓ (∃ hasSibling.(Granddaughter ⊓ (∃ hasChild.⊤)))",
      "⊤",
      "⊤",
      "⊤",
      "⊤",
      "∃ hasParent.(∃ hasChild.Female)",
      "⊤",
      "Female ⊓ (∃ hasSibling.⊤)",
      "Child",
      "PersonWithASibling",
      "⊤",
      "⊤",
      "⊤",
      "∃ hasSibling.(∃ hasChild.(Male ⊓ Parent))",
      "⊤",
      "Child",
      "Parent",
      "Female",
      "⊤",
      "⊤",
      "⊤",
      "⊤",
      "(∃ hasParent.(Female ⊓ (∃ hasParent.⊤))) ⊓ (∃ hasParent.(∃ hasParent.Child)) ⊓ (∃ hasSibling.⊤)",
      "Grandfather ⊓ Grandson ⊓ (∃ hasChild.⊤) ⊓ (∃ hasParent.⊤)",
      "∃ married.⊤",
      "Parent",
      "(∃ hasParent.(∃ hasChild.Male)) ⊓ (∃ hasSibling.⊤)",
      "∃ hasParent.(∃ hasChild.Male)",
      "∃ married.⊤",
      "∃ hasParent.Child",
      "Granddaughter ⊓ Mother",
      "∃ hasParent.Child",
      "⊤",
      "∃ married.⊤",
      "⊤",
      "∃ married.⊤",
      "Parent",
      "⊤",
      "⊤",
      "⊤",
      "Granddaughter ⊓ (∃ hasChild.⊤) ⊓ (∃ hasSibling.Male)",
      "(∃ hasParent.(∃ hasParent.⊤)) ⊓ (∃ hasSibling.((∃ hasSibling.Parent) ⊓ (∃ married.⊤))) ⊓ (∃ hasSibling.(∃ hasSibling.Grandparent)) ⊓ (∃ married.⊤)",
      "Child ⊓ Female",
      "⊤",
      "⊤",
      "∃ hasSibling.Grandson",
      "Child",
      "⊤",
      "⊤",
      "Child",
      "⊤",
      "Child",
      "PersonWithASibling",
      "Male ⊓ (∃ hasSibling.(∃ hasChild.PersonWithASibling))",
      "⊤",
      "∃ married.⊤",
      "⊤",
      "⊤",
      "⊤",
      "⊤",
      "∃ married.⊤"
   ],
   "Length": [
      1,
      3,
      3,
      13,
      1,
      1,
      1,
      13,
      1,
      11,
      1,
      1,
      3,
      3,
      3,
      1,
      1,
      11,
      1,
      15,
      7,
      1,
      17,
      9,
      3,
      1,
      3,
      1,
      1,
      9,
      21,
      15,
      3,
      1,
      1,
      1,
      7,
      3,
      1,
      1,
      3,
      1,
      7,
      1,
      1,
      3,
      1,
      3,
      5,
      5,
      5,
      1,
      1,
      3,
      1,
      5,
      15,
      17,
      1,
      1,
      3,
      17,
      1,
      1,
      5,
      19,
      3,
      3,
      1,
      1,
      1,
      13,
      5,
      3,
      11,
      1,
      13,
      1,
      3,
      1,
      1,
      1,
      1,
      3,
      1,
      3,
      1,
      1,
      1,
      1,
      1,
      1,
      13,
      1,
      3,
      1,
      1,
      1,
      17,
      7,
      3,
      17,
      1,
      5,
      1,
      1,
      1,
      15,
      1,
      1,
      3,
      1,
      9,
      5,
      7,
      1,
      3,
      1,
      3,
      1,
      17,
      1,
      9,
      1,
      1,
      3,
      3,
      1,
      17,
      11,
      1,
      1,
      3,
      5,
      3,
      1,
      13,
      3,
      1,
      13,
      1,
      1,
      1,
      1,
      5,
      1,
      5,
      1,
      1,
      1,
      1,
      1,
      7,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      17,
      11,
      3,
      1,
      9,
      5,
      3,
      3,
      3,
      3,
      1,
      3,
      1,
      3,
      1,
      1,
      1,
      1,
      9,
      25,
      3,
      1,
      1,
      3,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      7,
      1,
      3,
      1,
      1,
      1,
      1,
      3
   ],
   "Learned Concept": [
      "Grandson ⊔ Sister ⊔ (∃ hasChild.Grandparent)",
      "Grandson ⊔ (∃ hasParent.(Son ⊔ (∃ hasSibling.Parent)))",
      "Grandparent ⊔ (∃ married.(Parent ⊔ Sister))",
      "Male ⊓ (∃ hasSibling.(Father ⊔ (∃ hasSibling.Grandfather)))",
      "Grandson ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Grandfather)))",
      "Sister ⊔ (∃ married.(Grandfather ⊔ (∃ hasChild.PersonWithASibling)))",
      "Granddaughter ⊓ (∃ hasParent.(Grandmother ⊔ Sister))",
      "Female ⊓ (∃ hasParent.(Sister ⊓ (∃ hasChild.Mother)))",
      "Male ⊔ (Grandchild ⊓ Grandmother)",
      "∃ hasParent.(Brother ⊓ (∃ hasChild.PersonWithASibling))",
      "Brother ⊔ Daughter ⊔ (∃ married.Grandfather)",
      "Female ⊔ (∃ hasSibling.Grandmother)",
      "(Grandfather ⊓ Grandson) ⊔ (∃ hasChild.Grandmother)",
      "Father ⊓ (∃ married.(Grandparent ⊔ PersonWithASibling))",
      "Mother ⊔ (∃ married.(Granddaughter ⊔ (∃ hasParent.Son)))",
      "Sister ⊔ (∃ married.(Sister ⊓ (∃ hasChild.Female)))",
      "Sister ⊔ (∃ married.(Grandchild ⊔ Grandmother))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Grandson ⊓ (∃ hasChild.Sister)))",
      "Grandson ⊔ (∃ married.(PersonWithASibling ⊔ (∃ hasChild.Male)))",
      "Person ⊓ (∃ hasParent.(Grandparent ⊓ (∃ hasSibling.Parent)))",
      "Female ⊓ (∃ hasParent.Grandchild)",
      "Sister ⊔ (∃ married.(Grandmother ⊔ (∃ hasParent.Brother)))",
      "Male ⊓ (∃ hasSibling.(Male ⊓ (∃ hasChild.Male)))",
      "∃ hasParent.(Grandchild ⊓ (∃ hasChild.PersonWithASibling))",
      "(Grandmother ⊓ Sister) ⊔ (∃ hasChild.Grandmother)",
      "Parent ⊔ (∃ hasSibling.(Grandmother ⊔ (∃ hasParent.Grandson)))",
      "Grandparent ⊔ (∃ married.(Female ⊔ (∃ hasParent.Sister)))",
      "Daughter ⊔ (∃ hasSibling.(Grandfather ⊔ Grandson))",
      "Person ⊓ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Father)))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Son ⊔ (∃ hasSibling.Father)))",
      "∃ hasParent.(Grandson ⊓ (∃ hasChild.Brother))",
      "∃ hasParent.(PersonWithASibling ⊓ (∃ hasChild.Male))",
      "Grandson ⊔ (∃ hasParent.(Grandchild ⊓ Grandparent))",
      "Brother ⊔ Grandfather ⊔ (∃ hasChild.Grandmother)",
      "Sister ⊔ (∃ married.(Grandchild ⊓ Grandfather))",
      "Child ⊔ (∃ married.(Brother ⊓ Grandchild))",
      "Granddaughter ⊓ (∃ hasParent.(∃ hasSibling.Granddaughter))",
      "Grandparent ⊔ (∃ married.(Mother ⊔ Sister))",
      "Grandchild ⊔ (∃ hasChild.Grandparent)",
      "Grandson ⊔ (∃ married.(Grandfather ⊔ (∃ hasChild.Grandson)))",
      "Person ⊓ (∃ hasParent.(Brother ⊔ (∃ hasSibling.Grandmother)))",
      "Father ⊔ Grandson",
      "Grandchild ⊓ (∃ married.⊤)",
      "Daughter ⊔ Father ⊔ Grandparent",
      "(Grandson ⊓ PersonWithASibling) ⊔ (∃ hasChild.Grandmother)",
      "Mother ⊔ (∃ married.(Male ⊔ (∃ married.PersonWithASibling)))",
      "Parent ⊔ (∃ hasSibling.(Grandfather ⊓ (∃ hasChild.PersonWithASibling)))",
      "Grandparent ⊔ (∃ married.(Female ⊔ (∃ married.Sister)))",
      "Daughter ⊔ (∃ hasSibling.(Grandmother ⊓ (∃ hasChild.Daughter)))",
      "Male ⊓ (∃ hasSibling.(Daughter ⊔ (∃ married.Person)))",
      "Grandson ⊔ (∃ hasSibling.Grandmother)",
      "Granddaughter ⊔ Mother ⊔ (∃ hasChild.Grandparent)",
      "Child ⊔ (∃ married.(Grandparent ⊓ (∃ hasSibling.Sister)))",
      "Mother ⊔ (∃ married.(∃ hasParent.Son))",
      "Grandparent ⊔ (∃ married.(Father ⊓ (∃ hasSibling.Sister)))",
      "Son ⊔ (∃ hasSibling.Grandparent)",
      "Grandson ⊔ (∃ hasParent.(Son ⊓ (∃ hasChild.Brother)))",
      "Person ⊓ (∃ hasParent.(Grandfather ⊔ (∃ hasSibling.Grandfather)))",
      "Sister ⊔ Son ⊔ (∃ hasChild.Mother)",
      "Granddaughter ⊓ (∃ hasParent.(Grandparent ⊔ Grandson))",
      "Grandparent ⊔ (∃ married.(PersonWithASibling ⊔ (∃ married.Son)))",
      "Person ⊓ (∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.Grandmother)))",
      "Sister ⊔ (∃ married.(Female ⊔ (∃ hasSibling.Male)))",
      "Grandmother ⊔ Sister ⊔ (∃ hasChild.Grandparent)",
      "Mother ⊔ (∃ married.(Male ⊓ (∃ hasParent.Grandfather)))",
      "Grandchild ⊓ (∃ hasChild.Mother)",
      "Mother ⊔ (∃ married.(Brother ⊔ Grandmother))",
      "∃ hasParent.(Son ⊔ (∃ hasSibling.Male))",
      "Granddaughter ⊓ (∃ hasParent.(Grandson ⊔ (∃ hasSibling.Son)))",
      "Grandson ⊔ (∃ married.(Grandfather ⊓ (∃ hasSibling.Grandfather)))",
      "Grandson ⊔ (∃ married.(Grandchild ⊔ Son))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Grandson ⊓ (∃ hasSibling.Sister)))",
      "Daughter ⊔ (∃ hasSibling.(Grandson ⊓ (∃ hasSibling.Daughter)))",
      "Grandparent ⊔ (∃ married.(PersonWithASibling ⊔ (∃ married.Sister)))",
      "(Sister ⊔ Son) ⊓ (∃ married.Grandparent)",
      "Grandparent ⊔ (Mother ⊓ Sister)",
      "Mother ⊓ (∃ hasParent.(Brother ⊔ (∃ hasSibling.Grandson)))",
      "Male ⊔ (∃ hasSibling.(Son ⊓ (∃ hasParent.Son)))",
      "Mother ⊔ (∃ married.(Grandchild ⊔ (∃ married.PersonWithASibling)))",
      "Grandson ⊔ (∃ married.(Female ⊓ (∃ hasChild.Grandchild)))",
      "Granddaughter ⊔ Grandparent",
      "Grandson ⊔ (∃ married.(Grandparent ⊓ (∃ hasChild.Sister)))",
      "Grandson ⊔ (∃ married.(Sister ⊔ (∃ hasParent.Sister)))",
      "Mother ⊔ (∃ married.Sister)",
      "Daughter ⊔ (∃ hasChild.Grandmother)",
      "Granddaughter ⊓ (∃ married.(Grandfather ⊔ (∃ hasChild.Daughter)))",
      "Grandson ⊔ (∃ married.(Granddaughter ⊔ Grandfather))",
      "Daughter ⊔ (∃ hasSibling.(Grandson ⊓ (∃ married.⊤)))",
      "Child ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Grandparent)))",
      "Male ⊔ (∃ hasSibling.(∃ hasSibling.Parent))",
      "Grandson ⊔ (∃ married.(Father ⊓ (∃ hasParent.Sister)))",
      "Grandson ⊔ (∃ married.(Brother ⊔ Grandson))",
      "Father ⊓ (∃ married.(∃ hasParent.Granddaughter))",
      "Sister ⊔ (∃ married.(Granddaughter ⊔ (∃ hasParent.Brother)))",
      "Grandparent ⊔ (∃ married.(PersonWithASibling ⊔ (∃ hasParent.Brother)))",
      "Daughter ⊔ (∃ hasSibling.(Grandparent ⊔ Son))",
      "Parent ⊔ (∃ hasSibling.(Mother ⊔ (∃ hasSibling.Grandparent)))",
      "Grandfather ⊔ (∃ hasSibling.Grandparent)",
      "Granddaughter ⊓ (∃ hasParent.(Grandfather ⊓ (∃ hasChild.Male)))",
      "Granddaughter ⊓ (∃ hasParent.(Sister ⊔ (∃ hasParent.Granddaughter)))",
      "Mother ⊔ (∃ married.(Grandchild ⊔ (∃ hasSibling.Female)))",
      "Female ⊓ (∃ hasParent.(Grandparent ⊓ Son))",
      "Female ⊓ (∃ hasParent.(Grandchild ⊔ PersonWithASibling))",
      "Grandson ⊔ (∃ married.(Grandfather ⊓ (∃ married.Sister)))",
      "Granddaughter ⊓ (∃ hasParent.(Daughter ⊔ (∃ hasSibling.Daughter)))",
      "Grandson ⊔ (∃ hasParent.(Son ⊔ (∃ hasChild.Father)))",
      "Grandson ⊔ (∃ married.(Grandmother ⊓ (∃ hasChild.Male)))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Daughter ⊓ (∃ hasSibling.Sister)))",
      "Sister ⊔ (∃ married.(Grandmother ⊔ (∃ hasChild.Father)))",
      "Grandparent ⊔ (∃ married.(Father ⊓ (∃ hasSibling.Grandson)))",
      "Granddaughter ⊔ Sister",
      "Parent ⊔ (∃ hasSibling.(Grandfather ⊔ Mother))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Son ⊔ (∃ hasChild.Grandmother)))",
      "Granddaughter ⊓ (∃ married.Male)",
      "Male ⊓ (∃ hasSibling.(Male ⊓ (∃ hasSibling.Father)))",
      "Daughter ⊔ Grandson ⊔ (∃ hasSibling.Grandparent)",
      "Grandparent ⊔ (∃ married.(PersonWithASibling ⊔ (∃ hasChild.Grandson)))",
      "Child ⊔ (∃ married.(Granddaughter ⊓ PersonWithASibling))",
      "Grandson ⊔ (∃ hasParent.(Sister ⊔ (∃ hasParent.Daughter)))",
      "Grandson ⊔ (∃ married.(Sister ⊓ (∃ hasChild.Grandfather)))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Mother ⊓ (∃ hasSibling.Male)))",
      "Father ⊔ Sister ⊔ Son",
      "Mother ⊓ (∃ hasParent.(∃ hasParent.Grandson))",
      "(Grandmother ⊔ PersonWithASibling) ⊓ (∃ hasParent.⊤)",
      "Sister ⊔ (∃ married.(Grandmother ⊔ (∃ hasParent.PersonWithASibling)))",
      "Grandparent ⊔ (∃ married.(Brother ⊔ (∃ hasParent.Sister)))",
      "Grandparent ⊔ (∃ married.(Granddaughter ⊔ Male))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Grandchild ⊔ (∃ hasChild.Grandmother)))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Grandchild ⊓ (∃ hasChild.Grandmother)))",
      "Father ⊓ (∃ married.(Child ⊓ (∃ hasChild.PersonWithASibling)))",
      "Child ⊔ (∃ married.(Grandchild ⊓ (∃ hasSibling.Grandparent)))",
      "Grandson ⊔ (∃ married.(Father ⊔ (∃ married.Sister)))",
      "Grandchild ⊓ (Father ⊔ Female)",
      "Daughter ⊔ (∃ hasSibling.(Granddaughter ⊓ Grandparent))",
      "Grandson ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasSibling.Father)))",
      "Sister ⊔ (∃ married.(Daughter ⊔ (∃ hasChild.Father)))",
      "Person ⊓ (∃ hasParent.(PersonWithASibling ⊓ (∃ hasChild.Grandfather)))",
      "Grandparent ⊔ (∃ married.Grandchild)",
      "Grandson ⊔ (∃ married.(Daughter ⊓ (∃ hasChild.Grandfather)))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Mother ⊓ (∃ hasParent.Grandchild)))",
      "Child ⊔ (∃ married.(Granddaughter ⊔ (∃ hasParent.Sister)))",
      "Child ⊔ (∃ married.(Grandparent ⊓ (∃ hasSibling.⊤)))",
      "Grandson ⊔ (∃ married.(Granddaughter ⊔ (∃ married.Sister)))",
      "Child ⊔ (∃ married.(Brother ⊔ Grandson))",
      "Daughter ⊔ (∃ hasSibling.(∃ married.Male))",
      "Grandson ⊔ (∃ married.(PersonWithASibling ⊓ (∃ hasParent.Grandson)))",
      "Sister ⊓ (Granddaughter ⊔ Grandparent)",
      "Grandson ⊔ (∃ hasParent.(Grandfather ⊔ (∃ hasChild.PersonWithASibling)))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Grandchild ⊔ (∃ hasChild.Father)))",
      "Sister ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Male)))",
      "Sister ⊔ (∃ married.(PersonWithASibling ⊓ (∃ hasChild.Brother)))",
      "Daughter ⊔ Father",
      "PersonWithASibling ⊓ (∃ hasSibling.(∃ hasChild.Father))",
      "Sister ⊔ (∃ married.(Child ⊓ Parent))",
      "Daughter ⊔ (∃ hasSibling.(Male ⊔ (∃ hasSibling.Granddaughter)))",
      "Grandparent ⊔ (∃ married.(Father ⊓ (∃ hasParent.Brother)))",
      "Sister ⊔ (∃ married.(Grandfather ⊓ (∃ hasChild.PersonWithASibling)))",
      "Child ⊔ (∃ married.(Granddaughter ⊓ Parent))",
      "Mother ⊔ (∃ hasSibling.Grandparent)",
      "Sister ⊔ (∃ married.(Mother ⊓ (∃ hasSibling.Male)))",
      "Brother ⊔ Grandchild ⊔ (∃ married.Grandfather)",
      "∃ hasParent.(Granddaughter ⊓ (∃ hasChild.PersonWithASibling))",
      "Grandparent ⊓ Grandson",
      "Mother ⊔ (∃ married.(Sister ⊔ (∃ hasParent.Son)))",
      "(Brother ⊓ Father) ⊔ (∃ married.Grandfather)",
      "PersonWithASibling ⊓ (∃ hasSibling.(Grandson ⊔ (∃ hasSibling.Grandmother)))",
      "∃ hasParent.(∃ hasChild.Male)",
      "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Son)))",
      "Grandchild",
      "Mother ⊓ (∃ hasParent.(Grandchild ⊔ (∃ hasSibling.Grandfather)))",
      "Person ⊓ (∃ hasParent.(Son ⊔ (∃ hasSibling.Grandfather)))",
      "Granddaughter ⊔ Grandfather ⊔ (∃ hasChild.Mother)",
      "Grandparent ⊔ (∃ hasSibling.Grandmother)",
      "Sister ⊔ (∃ married.(Grandfather ⊔ (∃ hasChild.Male)))",
      "Mother ⊔ (∃ married.(Granddaughter ⊔ (∃ hasSibling.Grandfather)))",
      "(Granddaughter ⊓ Parent) ⊔ (∃ hasChild.Grandmother)",
      "Grandchild ⊔ Grandparent ⊔ PersonWithASibling",
      "Sister ⊔ (∃ married.(Mother ⊓ PersonWithASibling))",
      "Grandfather ⊔ Sister ⊔ (∃ hasChild.Grandparent)",
      "Mother ⊓ (∃ hasParent.(∃ hasChild.Grandson))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Grandchild ⊓ (∃ hasSibling.Grandmother)))",
      "Female ⊓ (∃ hasParent.(Grandmother ⊔ (∃ hasSibling.Grandparent)))",
      "Grandson ⊔ (∃ married.(PersonWithASibling ⊓ (∃ hasChild.Male)))",
      "Male ⊔ (∃ hasSibling.(Grandchild ⊓ Parent))",
      "PersonWithASibling ⊓ (∃ hasSibling.Grandson)",
      "Person ⊓ (∃ hasParent.(PersonWithASibling ⊔ (∃ hasChild.Father)))",
      "Grandson ⊔ (∃ married.(Grandchild ⊓ (∃ hasChild.Sister)))",
      "Sister ⊔ (∃ married.(Male ⊔ (∃ hasChild.Father)))",
      "Daughter ⊔ (∃ hasSibling.(Grandson ⊔ (∃ hasSibling.Daughter)))",
      "Daughter ⊔ Parent",
      "Daughter ⊔ (∃ hasSibling.(Granddaughter ⊔ (∃ hasChild.Daughter)))",
      "PersonWithASibling ⊓ (∃ hasSibling.(Son ⊔ (∃ married.Male)))",
      "Brother ⊓ (∃ hasSibling.(∃ hasChild.PersonWithASibling))",
      "Sister ⊔ (∃ married.(Male ⊔ (∃ hasParent.PersonWithASibling)))",
      "Grandparent ⊔ (∃ married.(Grandson ⊔ (∃ hasSibling.Son)))",
      "Child ⊔ (∃ married.(Son ⊓ (∃ hasChild.Sister)))",
      "Grandson ⊔ (∃ married.(Grandson ⊔ (∃ hasParent.Sister)))",
      "Parent ⊔ (∃ hasSibling.(Parent ⊓ (∃ hasSibling.Grandson)))",
      "Sister ⊔ (∃ married.(Daughter ⊓ (∃ hasSibling.Female)))",
      "Mother ⊔ (∃ married.(∃ married.PersonWithASibling))"
   ]
}