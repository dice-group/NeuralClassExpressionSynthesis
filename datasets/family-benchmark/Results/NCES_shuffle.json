{
   "SetTransformer": {
      "acc": {
         "values": [
            93.05600000000001,
            94.077,
            93.851,
            97.934,
            86.92800000000001,
            99.115,
            97.619,
            89.34,
            84.47200000000001,
            84.13199999999999,
            76.42,
            87.888,
            79.63,
            80.696,
            89.474,
            96.14200000000001,
            89.069,
            97.551,
            94.0,
            75.214,
            92.373,
            98.104,
            98.75500000000001,
            90.523,
            68.81,
            87.77000000000001,
            96.444,
            96.83,
            89.441,
            89.121,
            90.226,
            89.13,
            73.438,
            95.987,
            87.712,
            86.154,
            91.503,
            89.2,
            79.257,
            87.205,
            89.45100000000001,
            96.714,
            97.222,
            76.471,
            96.241,
            93.204,
            92.996,
            96.916
         ],
         "mean": [
            89.662625
         ],
         "std": [
            7.307153012702119
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ Grandfather ⊔ Father",
            "Mother ⊔ (∃ hasChild.Brother)",
            "Grandparent ⊔ (∃ married.Son)",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Sister ⊔ (∃ hasParent.⊤) ⊔ (∃ hasSibling.⊤)",
            "(Daughter ⊔ Parent) ⊓ (∃ married.⊤)",
            "Granddaughter ⊓ (∃ hasSibling.Father) ⊓ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.⊤) ⊔ (∃ hasChild.Male)",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.(Brother ⊔ (∃ hasSibling.Grandparent)))",
            "Mother ⊔ (∃ hasParent.Brother) ⊔ (∃ hasParent.⊤)",
            "Grandfather ⊔ (∃ hasChild.Granddaughter) ⊔ (∃ hasChild.⊤)",
            "Grandparent ⊔ (∃ married.⊤)",
            "Grandmother ⊔ Son",
            "∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Granddaughter))",
            "Male ⊔ (∃ hasParent.(Brother ⊔ Daughter))",
            "(Granddaughter ⊓ (∃ hasSibling.⊤)) ⊔ (∃ hasParent.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasSibling.Daughter)))",
            "Female ⊓ (∃ hasParent.Grandmother)",
            "Grandson ⊔ (∃ married.Brother) ⊔ (∃ hasSibling.⊤)",
            "Grandson ⊓ (∃ hasParent.Son)",
            "Female ⊓ (∃ hasParent.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.⊤)",
            "Brother",
            "Brother ⊔ (∃ hasChild.(PersonWithASibling ⊓ (∃ hasSibling.Son)))",
            "Grandmother ⊓ (∃ hasChild.Granddaughter)",
            "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Granddaughter ⊓ (∃ hasParent.⊤)",
            "Person ⊓ (∃ married.(Sister ⊔ (∃ hasParent.Daughter)))",
            "∃ hasChild.⊤",
            "(Mother ⊔ (∃ hasParent.⊤)) ⊓ (∃ hasSibling.⊤)",
            "Grandson ⊔ (∃ hasParent.(Daughter ⊔ (∃ hasChild.Father)))",
            "Grandson ⊓ (∃ hasParent.Granddaughter)",
            "∃ hasChild.(Parent ⊓ (∃ hasChild.Grandson))",
            "Grandfather ⊔ (∃ hasChild.(Son ⊔ (∃ hasChild.Daughter)))",
            "(Sister ⊔ (∃ hasParent.Brother)) ⊓ (∃ hasChild.⊤)",
            "Brother ⊔ (∃ hasChild.Grandparent)",
            "Sister ⊔ (∃ hasParent.Brother) ⊔ (∃ hasSibling.⊤)",
            "Grandfather ⊓ (∃ hasChild.⊤) ⊓ (∃ hasChild.Grandfather)",
            "Grandfather ⊓ (∃ hasParent.⊤)",
            "∃ hasParent.Daughter",
            "Grandson ⊔ (∃ married.Brother)",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Daughter)))",
            "∃ hasParent.(Grandson ⊔ Son)",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            91.40899999999999,
            88.889,
            90.256,
            93.333,
            76.19,
            98.893,
            54.545,
            87.71900000000001,
            73.68400000000001,
            74.882,
            61.751,
            80.597,
            72.0,
            63.473,
            14.285999999999998,
            94.94200000000001,
            57.143,
            92.5,
            81.48100000000001,
            58.768,
            64.0,
            71.429,
            96.0,
            83.799,
            19.835,
            71.186,
            78.947,
            96.057,
            83.49499999999999,
            45.833,
            74.51,
            82.92699999999999,
            43.708999999999996,
            93.407,
            25.641000000000002,
            55.00000000000001,
            85.714,
            60.870000000000005,
            61.714,
            75.0,
            44.444,
            53.333,
            92.473,
            59.184000000000005,
            91.525,
            89.119,
            80.435,
            83.721
         ],
         "mean": [
            72.29266666666668
         ],
         "std": [
            20.172823985638587
         ]
      },
      "time": {
         "values": [
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117,
            0.02198660870393117
         ],
         "mean": [
            0.02198660870393117
         ],
         "std": [
            0.0
         ]
      }
   },
   "GRU": {
      "acc": {
         "values": [
            81.194,
            85.113,
            92.923,
            98.34,
            75.429,
            78.788,
            89.7,
            83.014,
            87.132,
            80.117,
            81.94399999999999,
            99.648,
            79.63,
            93.355,
            90.351,
            94.42099999999999,
            94.51,
            94.0,
            85.879,
            92.174,
            98.104,
            96.774,
            90.523,
            89.49000000000001,
            91.373,
            95.279,
            94.842,
            89.441,
            63.58200000000001,
            91.729,
            75.46000000000001,
            100.0,
            96.98,
            94.872,
            91.129,
            87.888,
            97.992,
            90.159,
            93.61699999999999,
            100.0,
            96.714,
            93.939,
            72.47200000000001,
            91.608,
            93.092,
            80.345,
            94.828
         ],
         "mean": [
            89.57221276595747
         ],
         "std": [
            7.91957620813341
         ]
      },
      "prediction": {
         "values": [
            "Grandparent",
            "Mother ⊔ (∃ married.(Grandchild ⊓ Grandchild))",
            "Grandparent ⊔ (∃ married.(Son ⊔ (∃ hasParent.Male)))",
            "Grandfather",
            "Sister ⊔ Male",
            "Grandparent ⊔ Son",
            "Granddaughter ⊓ (∃ hasSibling.⊤)",
            "Grandson ⊔ (∃ married.(Father ⊔ Son))",
            "Grandfather",
            "Grandson ⊔ (∃ married.(Granddaughter ⊔ Sister))",
            "Sister",
            "Grandfather ⊔ (∃ hasChild.Daughter)",
            "Grandparent ⊔ (∃ married.⊤)",
            "Sister ⊔ (∃ hasParent.(Grandparent ⊔ (∃ hasChild.Son)))",
            "∃ hasChild.(Male ⊓ (∃ hasParent.Granddaughter))",
            "Female ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasSibling.Son)))",
            "Grandfather ⊔ (∃ hasChild.(∃ hasChild.Sister))",
            "Daughter ⊓ (∃ hasParent.Grandmother)",
            "Grandson ⊔ (∃ married.(Father ⊔ PersonWithASibling))",
            "Grandson ⊓ (∃ hasParent.Granddaughter)",
            "Granddaughter ⊓ (∃ hasParent.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasParent.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(Daughter ⊔ (∃ hasChild.Son)))",
            "Grandfather ⊔ (∃ married.(Granddaughter ⊔ (∃ hasChild.Daughter)))",
            "Brother ⊔ (∃ hasSibling.(Parent ⊓ (∃ hasSibling.Grandson)))",
            "Grandmother ⊓ (∃ hasChild.(Grandson ⊔ (∃ hasSibling.Mother)))",
            "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasChild.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Female ⊔ Grandparent",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasParent.Daughter)))",
            "Grandfather ⊔ (∃ married.Grandchild)",
            "Mother ⊔ (∃ hasParent.(Daughter ⊓ (∃ hasSibling.Sister)))",
            "Grandson ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Son)))",
            "Grandson ⊓ PersonWithASibling",
            "∃ hasChild.(Brother ⊓ Brother)",
            "Grandparent ⊔ (∃ married.(Parent ⊓ Parent))",
            "Sister ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasParent.Granddaughter)))",
            "Brother ⊔ (∃ hasChild.(Mother ⊔ Sister))",
            "Sister ⊔ (∃ hasParent.(∃ hasSibling.Sister))",
            "Grandfather ⊓ (∃ hasChild.⊤)",
            "Grandfather ⊓ (∃ hasParent.⊤)",
            "Granddaughter ⊔ (∃ hasParent.Daughter)",
            "Grandson ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasParent.Male)))",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ PersonWithASibling))",
            "Grandparent ⊔ (∃ married.(Mother ⊓ Parent))",
            "Sister ⊔ (∃ hasParent.Sister)",
            "Granddaughter ⊓ (∃ hasSibling.⊤)"
         ]
      },
      "f1": {
         "values": [
            68.96600000000001,
            72.619,
            89.68599999999999,
            94.595,
            59.048,
            68.571,
            36.842000000000006,
            76.515,
            66.667,
            67.925,
            56.667,
            99.387,
            72.0,
            88.764,
            26.667,
            73.469,
            84.783,
            81.48100000000001,
            79.668,
            52.632,
            71.429,
            90.476,
            83.799,
            82.723,
            73.81,
            78.431,
            93.47800000000001,
            83.49499999999999,
            15.278,
            79.245,
            52.381,
            100.0,
            95.082,
            76.923,
            68.571,
            80.597,
            94.382,
            84.10300000000001,
            87.324,
            100.0,
            53.333,
            85.185,
            53.333,
            83.333,
            88.52499999999999,
            52.101,
            75.0
         ],
         "mean": [
            74.45295744680853
         ],
         "std": [
            18.277240348699983
         ]
      },
      "time": {
         "values": [
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862,
            0.02057186762491862
         ],
         "mean": [
            0.020571867624918617
         ],
         "std": [
            3.469446951953614e-18
         ]
      }
   },
   "LSTM": {
      "acc": {
         "values": [
            73.829,
            86.92800000000001,
            93.04599999999999,
            95.19999999999999,
            93.333,
            80.952,
            87.234,
            90.73,
            94.326,
            80.769,
            93.448,
            86.207,
            86.31,
            94.27600000000001,
            92.035,
            93.92099999999999,
            99.548,
            97.531,
            94.0,
            91.111,
            93.913,
            98.068,
            96.761,
            92.83200000000001,
            91.216,
            90.769,
            69.876,
            86.723,
            75.70599999999999,
            77.52799999999999,
            96.063,
            89.80900000000001,
            93.08,
            87.667,
            94.286,
            70.186,
            0.0,
            93.487,
            88.254,
            95.39,
            92.405,
            78.03,
            93.939,
            83.965,
            84.983,
            96.259,
            91.135,
            91.026
         ],
         "mean": [
            87.46020833333334
         ],
         "std": [
            14.600191097434212
         ]
      },
      "prediction": {
         "values": [
            "Daughter ⊔ (∃ married.(Child ⊓ Daughter))",
            "Mother ⊔ (∃ hasChild.(Grandchild ⊓ Grandson))",
            "Grandparent ⊔ (∃ married.(Grandson ⊓ (∃ hasParent.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Daughter)))",
            "Sister ⊔ (∃ hasParent.(Grandchild ⊔ (∃ hasChild.Granddaughter)))",
            "Grandparent ⊔ Grandparent",
            "Female ⊓ (∃ hasSibling.Daughter)",
            "Grandson ⊔ (∃ married.(Grandmother ⊔ (∃ hasChild.Male)))",
            "∃ hasChild.(Father ⊔ Sister)",
            "Grandson ⊔ (∃ married.(Child ⊓ Sister))",
            "Daughter ⊔ (∃ married.Grandson)",
            "(∃ hasChild.Daughter) ⊔ (∃ hasSibling.Daughter)",
            "Grandparent ⊔ (∃ married.(Son ⊔ (∃ married.Daughter)))",
            "Daughter ⊔ (∃ hasParent.(Grandmother ⊔ (∃ hasSibling.Son)))",
            "∃ hasChild.(Parent ⊓ (∃ hasSibling.Granddaughter))",
            "Male ⊔ (∃ hasParent.(∃ hasParent.Daughter))",
            "Granddaughter ⊓ (∃ hasSibling.(Daughter ⊔ Grandfather))",
            "Grandfather ⊔ (∃ hasChild.(Granddaughter ⊓ Grandson))",
            "Female ⊓ (∃ hasParent.(Grandfather ⊔ (∃ hasChild.Mother)))",
            "Grandson ⊔ (∃ married.(Son ⊔ (∃ hasSibling.Sister)))",
            "Grandson ⊓ (∃ hasParent.Grandson)",
            "Female ⊓ (∃ hasParent.(Grandson ⊓ (∃ hasSibling.Mother)))",
            "Grandfather ⊔ (∃ hasChild.(Brother ⊓ (∃ hasChild.Daughter)))",
            "Daughter ⊔ (∃ hasParent.(Sister ⊓ (∃ hasChild.Granddaughter)))",
            "Grandparent ⊔ (∃ married.(Granddaughter ⊓ (∃ hasChild.PersonWithASibling)))",
            "Brother ⊔ (∃ hasChild.(Sister ⊓ (∃ hasSibling.Grandparent)))",
            "(Grandmother ⊓ (∃ hasChild.Brother)) ⊔ (∃ hasChild.⊤)",
            "Grandparent ⊔ (∃ married.(Grandson ⊔ (∃ hasChild.Male)))",
            "Child ⊔ (∃ hasChild.Brother)",
            "(Female ⊓ Grandmother) ⊔ (∃ hasSibling.Grandson)",
            "Person ⊓ (∃ married.Daughter)",
            "Grandparent ⊔ (∃ married.(Father ⊔ (∃ hasChild.Daughter)))",
            "Mother ⊔ (∃ hasParent.(Grandchild ⊓ Sister))",
            "Grandson ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasSibling.Mother)))",
            "Grandson ⊓ (∃ hasParent.⊤)",
            "∃ hasChild.⊤",
            "Grandfather ⊓ Sister",
            "Sister ⊔ (∃ hasParent.(Grandparent ⊓ (∃ hasSibling.Parent)))",
            "Brother ⊔ (∃ hasChild.(Sister ⊔ (∃ hasChild.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(∃ hasSibling.Female))",
            "Grandfather ⊓ (∃ hasChild.(Grandparent ⊔ Grandparent))",
            "∃ hasParent.(Male ⊓ (∃ hasChild.Grandson))",
            "(∃ hasParent.(Daughter ⊔ Granddaughter)) ⊔ Granddaughter",
            "Grandson ⊔ (∃ married.(Grandchild ⊔ Grandson))",
            "Child ⊓ (∃ married.⊤)",
            "Grandparent ⊔ (∃ married.(Daughter ⊓ (∃ hasSibling.Daughter)))",
            "Grandchild ⊓ (∃ hasParent.(Child ⊔ Grandchild))",
            "Female ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Brother)))"
         ]
      },
      "f1": {
         "values": [
            58.15,
            76.19,
            88.268,
            85.714,
            87.075,
            68.62700000000001,
            16.667,
            88.0,
            88.889,
            68.599,
            87.898,
            76.842,
            79.279,
            90.173,
            40.0,
            91.45299999999999,
            97.297,
            92.105,
            81.48100000000001,
            85.859,
            66.667,
            33.333,
            90.244,
            85.075,
            83.951,
            73.913,
            32.168,
            81.71199999999999,
            60.550000000000004,
            14.285999999999998,
            89.362,
            83.333,
            87.01299999999999,
            76.73,
            80.55600000000001,
            33.333,
            0.0,
            83.16799999999999,
            80.423,
            91.156,
            65.385,
            12.121,
            85.185,
            75.771,
            68.116,
            93.642,
            81.48100000000001,
            51.163000000000004
         ],
         "mean": [
            71.00839583333332
         ],
         "std": [
            24.148102235423856
         ]
      },
      "time": {
         "values": [
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973,
            0.021500105659166973
         ],
         "mean": [
            0.021500105659166973
         ],
         "std": [
            0.0
         ]
      }
   }
}