{
   "SetTransformer": {
      "acc": {
         "values": [
            93.05600000000001,
            94.077,
            93.851,
            97.934,
            86.92800000000001,
            97.619,
            89.34,
            84.47200000000001,
            84.13199999999999,
            76.42,
            87.888,
            79.63,
            80.696,
            89.474,
            96.14200000000001,
            89.069,
            97.551,
            94.0,
            75.214,
            92.373,
            98.104,
            98.75500000000001,
            90.523,
            68.81,
            87.77000000000001,
            96.444,
            96.83,
            89.441,
            89.121,
            90.226,
            89.13,
            73.438,
            95.987,
            87.712,
            86.154,
            91.503,
            89.2,
            79.257,
            87.205,
            89.45100000000001,
            96.714,
            97.222,
            76.471,
            96.241,
            93.204,
            92.996,
            96.916
         ],
         "mean": [
            89.46151063829788
         ],
         "std": [
            7.251833056229214
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ Grandfather ⊔ Father",
            "Mother ⊔ (∃ hasChild.Brother)",
            "Grandparent ⊔ (∃ married.Son)",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Sister ⊔ (∃ hasParent.⊤) ⊔ (∃ hasSibling.⊤)",
            "Granddaughter ⊓ (∃ hasSibling.Father) ⊓ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.⊤) ⊔ (∃ hasChild.Male)",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.(Brother ⊔ (∃ hasSibling.Grandparent)))",
            "Mother ⊔ (∃ hasParent.Brother) ⊔ (∃ hasParent.⊤)",
            "Grandfather ⊔ (∃ hasChild.Granddaughter) ⊔ (∃ hasChild.⊤)",
            "Grandparent ⊔ (∃ married.⊤)",
            "Grandmother ⊔ Son",
            "∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Granddaughter))",
            "Male ⊔ (∃ hasParent.(Brother ⊔ Daughter))",
            "(Granddaughter ⊓ (∃ hasSibling.⊤)) ⊔ (∃ hasParent.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasSibling.Daughter)))",
            "Female ⊓ (∃ hasParent.Grandmother)",
            "Grandson ⊔ (∃ married.Brother) ⊔ (∃ hasSibling.⊤)",
            "Grandson ⊓ (∃ hasParent.Son)",
            "Female ⊓ (∃ hasParent.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.⊤)",
            "Brother",
            "Brother ⊔ (∃ hasChild.(PersonWithASibling ⊓ (∃ hasSibling.Son)))",
            "Grandmother ⊓ (∃ hasChild.Granddaughter)",
            "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Granddaughter ⊓ (∃ hasParent.⊤)",
            "Person ⊓ (∃ married.(Sister ⊔ (∃ hasParent.Daughter)))",
            "∃ hasChild.⊤",
            "(Mother ⊔ (∃ hasParent.⊤)) ⊓ (∃ hasSibling.⊤)",
            "Grandson ⊔ (∃ hasParent.(Daughter ⊔ (∃ hasChild.Father)))",
            "Grandson ⊓ (∃ hasParent.Granddaughter)",
            "∃ hasChild.(Parent ⊓ (∃ hasChild.Grandson))",
            "Grandfather ⊔ (∃ hasChild.(Son ⊔ (∃ hasChild.Daughter)))",
            "(Sister ⊔ (∃ hasParent.Brother)) ⊓ (∃ hasChild.⊤)",
            "Brother ⊔ (∃ hasChild.Grandparent)",
            "Sister ⊔ (∃ hasParent.Brother) ⊔ (∃ hasSibling.⊤)",
            "Grandfather ⊓ (∃ hasChild.⊤) ⊓ (∃ hasChild.Grandfather)",
            "Grandfather ⊓ (∃ hasParent.⊤)",
            "∃ hasParent.Daughter",
            "Grandson ⊔ (∃ married.Brother)",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Daughter)))",
            "∃ hasParent.(Grandson ⊔ Son)",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            91.40899999999999,
            88.889,
            90.256,
            93.333,
            76.19,
            54.545,
            87.71900000000001,
            73.68400000000001,
            74.882,
            61.751,
            80.597,
            72.0,
            63.473,
            14.285999999999998,
            94.94200000000001,
            57.143,
            92.5,
            81.48100000000001,
            58.768,
            64.0,
            71.429,
            96.0,
            83.799,
            19.835,
            71.186,
            78.947,
            96.057,
            83.49499999999999,
            45.833,
            74.51,
            82.92699999999999,
            43.708999999999996,
            93.407,
            25.641000000000002,
            55.00000000000001,
            85.714,
            60.870000000000005,
            61.714,
            75.0,
            44.444,
            53.333,
            92.473,
            59.184000000000005,
            91.525,
            89.119,
            80.435,
            83.721
         ],
         "mean": [
            71.72670212765959
         ],
         "std": [
            20.005649810411157
         ]
      },
      "time": {
         "values": [
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843,
            0.03045065701007843
         ],
         "mean": [
            0.03045065701007843
         ],
         "std": [
            0.0
         ]
      }
   },
   "GRU": {
      "acc": {
         "values": [
            83.824,
            93.426,
            97.087,
            94.14099999999999,
            89.007,
            99.048,
            80.0,
            98.168,
            84.98599999999999,
            68.769,
            87.888,
            75.389,
            89.899,
            73.288,
            0.0,
            100.0,
            98.381,
            97.166,
            82.948,
            92.174,
            98.104,
            94.882,
            100.0,
            85.538,
            92.776,
            94.222,
            88.539,
            89.441,
            98.122,
            89.63,
            82.578,
            100.0,
            78.082,
            94.286,
            96.46000000000001,
            67.774,
            98.785,
            84.762,
            95.39,
            89.45100000000001,
            83.817,
            91.971,
            81.928,
            96.241,
            94.57600000000001,
            88.172,
            95.652
         ],
         "mean": [
            88.01634042553192
         ],
         "std": [
            15.313883516345408
         ]
      },
      "prediction": {
         "values": [
            "Daughter ⊔ (∃ hasChild.Brother)",
            "Mother ⊔ (∃ hasChild.Sister)",
            "Grandparent ⊔ (∃ married.(Grandson ⊔ (∃ hasParent.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.Mother)",
            "Sister ⊔ (∃ hasParent.(Granddaughter ⊔ Sister))",
            "Granddaughter ⊓ Grandmother",
            "Grandson ⊔ (∃ married.Father)",
            "Grandfather ⊔ (∃ hasChild.(Sister ⊔ (∃ hasChild.Grandmother)))",
            "Grandson ⊔ (∃ married.(Father ⊔ (∃ hasChild.Grandparent)))",
            "Grandchild",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Grandparent ⊔ (∃ married.Parent) ⊔ (∃ hasParent.⊤)",
            "∃ hasParent.(Daughter ⊔ (∃ hasChild.Brother))",
            "∃ hasChild.Male",
            "Male ⊓ Grandfather ⊓ Daughter",
            "Granddaughter ⊓ (∃ hasSibling.Granddaughter)",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ Grandfather))",
            "Female ⊓ (∃ hasParent.(Sister ⊔ (∃ hasChild.Brother)))",
            "Grandson ⊔ (∃ married.(Father ⊔ (∃ hasSibling.Sister)))",
            "Grandson ⊓ (∃ hasParent.(∃ hasParent.Sister))",
            "Female ⊓ (∃ hasParent.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Grandparent ⊓ Grandparent))",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.PersonWithASibling)",
            "Brother ⊔ (∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Grandson)))",
            "Grandmother ⊓ (∃ hasChild.Grandmother)",
            "Grandparent ⊔ (∃ married.(Son ⊔ (∃ hasChild.Daughter)))",
            "Parent ⊔ (∃ hasChild.Male)",
            "Female ⊓ (∃ hasParent.Grandson)",
            "Person ⊓ (∃ married.(Granddaughter ⊔ (∃ hasSibling.Sister)))",
            "Grandfather",
            "Mother ⊔ (∃ hasParent.(Sister ⊓ (∃ hasSibling.Sister)))",
            "Grandson ⊔ (∃ hasParent.Granddaughter) ⊔ (∃ hasChild.⊤)",
            "Grandson ⊓ (∃ hasParent.⊤)",
            "∃ hasChild.(Brother ⊓ (∃ hasChild.Granddaughter))",
            "∃ hasParent.Granddaughter",
            "Sister ⊔ (∃ hasSibling.(Grandfather ⊓ Grandson))",
            "Brother ⊔ (∃ hasChild.Mother)",
            "Daughter ⊔ (∃ hasParent.(∃ hasSibling.Sister))",
            "Grandfather ⊓ (∃ hasChild.Grandfather)",
            "Grandparent ⊓ Grandmother",
            "Granddaughter ⊔ (∃ hasParent.(Daughter ⊔ Grandchild))",
            "Grandson ⊔ (∃ married.Granddaughter)",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.Grandson)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊓ (∃ hasParent.Daughter)))",
            "Sister ⊔ (∃ hasParent.(Son ⊔ Son))",
            "Female ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            75.113,
            87.742,
            95.61,
            83.871,
            75.969,
            85.714,
            71.146,
            96.35000000000001,
            78.715,
            34.177,
            80.597,
            65.201,
            81.25,
            23.529,
            0.0,
            100.0,
            95.34899999999999,
            91.566,
            74.236,
            52.632,
            71.429,
            85.714,
            100.0,
            76.382,
            81.553,
            60.606,
            84.25200000000001,
            83.49499999999999,
            77.778,
            74.074,
            58.333,
            100.0,
            67.47999999999999,
            80.55600000000001,
            80.0,
            3.9600000000000004,
            96.552,
            73.03399999999999,
            91.156,
            44.444,
            0.0,
            81.967,
            70.0,
            91.525,
            90.58800000000001,
            72.727,
            78.261
         ],
         "mean": [
            72.86453191489363
         ],
         "std": [
            24.451245307755702
         ]
      },
      "time": {
         "values": [
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903,
            0.024220700065294903
         ],
         "mean": [
            0.02422070006529491
         ],
         "std": [
            6.938893903907228e-18
         ]
      }
   },
   "LSTM": {
      "acc": {
         "values": [
            100.0,
            87.055,
            91.391,
            98.361,
            98.155,
            89.7,
            89.944,
            87.132,
            84.264,
            85.627,
            74.205,
            94.65400000000001,
            90.179,
            93.92099999999999,
            99.548,
            73.40100000000001,
            86.268,
            96.066,
            96.087,
            98.068,
            93.676,
            92.096,
            93.016,
            94.94200000000001,
            94.46799999999999,
            82.15299999999999,
            90.85,
            0.0,
            96.063,
            90.523,
            86.709,
            87.667,
            98.268,
            92.174,
            81.21000000000001,
            98.776,
            89.297,
            95.341,
            91.73599999999999,
            98.544,
            85.274,
            80.11399999999999,
            96.59100000000001,
            93.793,
            91.135,
            100.0
         ],
         "mean": [
            89.31395652173914
         ],
         "std": [
            14.737116492714875
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ Grandparent ⊔ Mother",
            "Mother ⊔ (∃ hasChild.(Grandfather ⊔ Grandson))",
            "Grandparent ⊔ (∃ married.(Grandson ⊓ (∃ hasChild.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.(PersonWithASibling ⊓ (∃ hasSibling.Grandfather)))",
            "Sister ⊔ (∃ hasParent.Grandchild)",
            "Female ⊓ (∃ hasSibling.Grandchild)",
            "Grandson ⊔ (∃ married.(Grandfather ⊔ (∃ hasChild.Male)))",
            "Grandfather",
            "Grandson ⊔ (∃ married.⊤)",
            "Female ⊔ (∃ married.(Grandchild ⊔ Son))",
            "Grandfather ⊓ (∃ married.(Sister ⊓ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Grandchild ⊔ Son))",
            "∃ hasChild.(PersonWithASibling ⊓ (∃ hasParent.Grandson))",
            "Male ⊔ (∃ hasParent.(∃ hasParent.Daughter))",
            "Granddaughter ⊓ (∃ hasSibling.(Sister ⊔ Grandfather))",
            "Daughter ⊔ (∃ hasChild.(Grandmother ⊔ (∃ hasChild.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(Daughter ⊔ (∃ hasSibling.Parent)))",
            "Grandson ⊔ (∃ married.(Granddaughter ⊔ (∃ hasSibling.Parent)))",
            "Grandson ⊓ (∃ hasParent.(Grandson ⊔ (∃ hasParent.Son)))",
            "Female ⊓ (∃ hasParent.(Grandson ⊓ (∃ hasSibling.Mother)))",
            "Grandfather ⊔ (∃ married.(PersonWithASibling ⊓ (∃ hasChild.Daughter)))",
            "Daughter ⊔ (∃ hasParent.(Sister ⊔ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Son ⊔ (∃ hasChild.Daughter)))",
            "Brother ⊔ (∃ hasChild.(Grandchild ⊓ (∃ hasSibling.Mother)))",
            "Grandmother ⊓ (∃ hasChild.(Grandparent ⊔ Grandson))",
            "Grandparent ⊔ (∃ married.Daughter)",
            "Brother ⊔ (∃ hasChild.Grandson)",
            "Female ⊓ (∃ hasParent.(Grandson ⊓ Sister))",
            "Person ⊓ (∃ married.Daughter)",
            "Grandparent ⊔ (∃ hasChild.Daughter)",
            "Mother ⊔ (∃ hasParent.Grandparent)",
            "Grandson ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasSibling.Mother)))",
            "Grandson ⊓ (∃ hasParent.Grandfather)",
            "∃ hasChild.(Sister ⊓ (∃ hasChild.Sister))",
            "Grandfather ⊔ (∃ married.(Grandson ⊔ (∃ hasSibling.Female)))",
            "Female ⊓ (∃ hasSibling.(Brother ⊔ (∃ married.Person)))",
            "Brother ⊔ (∃ hasChild.(Sister ⊔ (∃ hasParent.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(PersonWithASibling ⊓ (∃ hasSibling.Mother)))",
            "Male ⊓ (∃ hasChild.(Brother ⊔ Grandmother))",
            "Grandfather ⊓ (∃ hasParent.Grandson)",
            "Sister ⊔ (∃ hasParent.(Daughter ⊔ (∃ hasChild.Daughter)))",
            "Grandson ⊔ (∃ married.(Brother ⊔ PersonWithASibling))",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊓ Grandparent))",
            "Grandson ⊔ Grandchild",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            100.0,
            77.011,
            85.057,
            95.0,
            96.241,
            36.842000000000006,
            86.957,
            66.667,
            80.745,
            76.847,
            17.977999999999998,
            92.093,
            0.0,
            91.45299999999999,
            97.297,
            28.829,
            68.8,
            93.814,
            80.851,
            33.333,
            81.395,
            85.161,
            89.216,
            86.598,
            75.472,
            73.64,
            84.444,
            0.0,
            89.362,
            83.799,
            77.41900000000001,
            76.73,
            92.593,
            52.632,
            64.242,
            96.38600000000001,
            83.721,
            90.78,
            66.667,
            40.0,
            68.613,
            69.565,
            92.174,
            88.608,
            81.48100000000001,
            100.0
         ],
         "mean": [
            73.8372391304348
         ],
         "std": [
            24.74415001763024
         ]
      },
      "time": {
         "values": [
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794,
            0.02986829976240794
         ],
         "mean": [
            0.02986829976240795
         ],
         "std": [
            1.0408340855860843e-17
         ]
      }
   }
}