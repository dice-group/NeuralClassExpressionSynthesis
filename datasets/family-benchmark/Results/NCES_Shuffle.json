{
   "SetTransformer": {
      "acc": {
         "values": [
            93.05600000000001,
            75.556,
            79.891,
            97.934,
            66.048,
            99.115,
            58.333,
            89.34,
            75.556,
            84.13199999999999,
            77.778,
            78.611,
            81.593,
            80.696,
            89.474,
            96.14200000000001,
            84.937,
            97.551,
            68.05600000000001,
            64.5,
            54.449999999999996,
            57.49999999999999,
            98.75500000000001,
            70.777,
            81.389,
            87.77000000000001,
            62.5,
            96.83,
            80.0,
            59.167,
            90.226,
            79.72200000000001,
            74.185,
            95.987,
            58.445,
            86.154,
            91.503,
            67.58999999999999,
            80.0,
            70.43,
            85.83,
            57.221999999999994,
            62.334,
            72.56899999999999,
            96.241,
            93.204,
            92.996,
            96.916
         ],
         "mean": [
            79.97897916666666
         ],
         "std": [
            13.315359341579908
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Female ⊔ Grandfather ⊔ Father",
            "(Daughter ⊔ Parent) ⊓ (∃ married.⊤)",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandson ⊔ (∃ married.⊤) ⊔ (∃ hasChild.Male)",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandson ⊔ (∃ married.(Brother ⊔ (∃ hasSibling.Grandparent)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandmother ⊔ Son",
            "∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Granddaughter))",
            "Male ⊔ (∃ hasParent.(Brother ⊔ Daughter))",
            "(Grandfather ⊔ (∃ hasChild.Grandfather)) ⊓ (∃ hasChild.Grandfather)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasSibling.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Brother ⊔ (∃ hasChild.(PersonWithASibling ⊓ (∃ hasSibling.Son)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Person ⊓ (∃ married.(Sister ⊔ (∃ hasParent.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandson ⊔ (∃ hasParent.(Daughter ⊔ (∃ hasChild.Father)))",
            "Female ⊔ Grandfather ⊔ Father",
            "∃ hasChild.(Parent ⊓ (∃ hasChild.Grandson))",
            "Grandfather ⊔ (∃ hasChild.(Son ⊔ (∃ hasChild.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "(Grandfather ⊔ (∃ hasChild.Grandfather)) ⊓ (∃ hasChild.Grandfather)",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Daughter)))",
            "∃ hasParent.(Grandson ⊔ Son)",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            91.40899999999999,
            61.404,
            71.318,
            93.333,
            42.342,
            98.893,
            9.639000000000001,
            87.71900000000001,
            61.404,
            74.882,
            66.102,
            67.782,
            73.92999999999999,
            63.473,
            14.285999999999998,
            94.94200000000001,
            5.263,
            92.5,
            42.786,
            44.094,
            6.451999999999999,
            6.135,
            96.0,
            53.21900000000001,
            73.092,
            71.186,
            25.413999999999998,
            96.057,
            70.492,
            13.017999999999999,
            74.51,
            69.959,
            59.916000000000004,
            93.407,
            17.112,
            55.00000000000001,
            85.714,
            41.791,
            72.32499999999999,
            52.174,
            36.364000000000004,
            4.938,
            31.730999999999998,
            61.806000000000004,
            91.525,
            89.119,
            80.435,
            83.721
         ],
         "mean": [
            59.79402083333333
         ],
         "std": [
            28.768635455626544
         ]
      },
      "time": {
         "values": [
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104,
            0.15046465396881104
         ],
         "mean": [
            0.15046465396881104
         ],
         "std": [
            0.0
         ]
      }
   },
   "GRU": {
      "acc": {
         "values": [
            84.09100000000001,
            0.0,
            93.04599999999999,
            67.879,
            74.924,
            85.96000000000001,
            97.619,
            78.814,
            96.774,
            86.207,
            80.793,
            88.38000000000001,
            94.904,
            94.57600000000001,
            82.171,
            73.148,
            73.333,
            95.66900000000001,
            94.821,
            64.69,
            98.261,
            87.983,
            95.238,
            100.0,
            92.905,
            61.881,
            92.27499999999999,
            80.22,
            82.877,
            84.146,
            93.727,
            69.65299999999999,
            95.533,
            96.405,
            93.644,
            66.873,
            76.331,
            99.592,
            92.049,
            70.914,
            68.196,
            65.28699999999999,
            97.222,
            72.46000000000001,
            96.241,
            99.31,
            94.553,
            98.182
         ],
         "mean": [
            83.95327083333332
         ],
         "std": [
            16.680790156319013
         ]
      },
      "prediction": {
         "values": [
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Mother ⊓ (∃ married.Mother)",
            "Grandparent ⊔ (∃ married.(Son ⊓ (∃ hasParent.Daughter)))",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Granddaughter ⊓ (∃ hasSibling.Grandmother)",
            "Grandson ⊔ (∃ married.Son)",
            "Grandfather ⊔ (∃ hasChild.(Sister ⊔ (∃ hasChild.Female)))",
            "Grandson ⊔ (∃ married.(Father ⊔ Son))",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "∃ hasChild.(Sister ⊔ Sister)",
            "Grandparent ⊔ (∃ married.(Granddaughter ⊔ (∃ hasParent.PersonWithASibling)))",
            "Grandson ⊔ (∃ hasParent.(Grandmother ⊔ (∃ hasChild.Father)))",
            "∃ hasChild.Granddaughter",
            "Grandfather ⊔ (∃ married.(Daughter ⊓ Grandmother))",
            "Female ⊓ (Mother ⊔ Female)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊔ Grandfather))",
            "Female ⊓ (∃ hasParent.(Grandmother ⊔ (∃ hasChild.Brother)))",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Grandson ⊓ (∃ hasParent.Grandchild)",
            "∃ hasParent.(Grandchild ⊓ PersonWithASibling)",
            "Grandfather ⊔ (∃ hasChild.(Mother ⊓ (∃ hasChild.Daughter)))",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊓ (∃ hasChild.Daughter)))",
            "Person ⊔ (∃ hasChild.(Sister ⊓ (∃ hasSibling.Grandparent)))",
            "Grandmother ⊓ (∃ hasChild.Grandson)",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "∃ hasChild.Father",
            "Female ⊓ (∃ hasParent.Grandmother)",
            "Person ⊓ (∃ married.(Daughter ⊔ Grandchild))",
            "Female ⊓ (Mother ⊔ Female)",
            "Mother ⊔ (∃ hasParent.(Sister ⊓ (∃ hasSibling.Son)))",
            "Grandson ⊔ (∃ hasParent.(Granddaughter ⊔ Female))",
            "Grandson ⊓ (∃ hasParent.(Granddaughter ⊔ (∃ hasSibling.Grandmother)))",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Sister ⊔ (∃ hasParent.(Granddaughter ⊓ Grandson))",
            "Brother ⊔ (∃ hasChild.(Female ⊔ (∃ hasChild.Grandson)))",
            "Sister ⊔ Parent",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "∃ hasParent.(Daughter ⊔ Sister)",
            "Daughter ⊔ (∃ hasChild.Grandson)",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.Grandson)))",
            "Grandparent ⊔ (∃ married.(Sister ⊓ (∃ hasParent.Grandmother)))",
            "∃ hasParent.(Son ⊔ (∃ hasParent.Granddaughter))",
            "Granddaughter ⊓ (∃ hasSibling.(∃ hasParent.Grandchild))"
         ]
      },
      "f1": {
         "values": [
            77.049,
            0.0,
            88.268,
            29.333,
            52.571,
            80.0,
            54.545,
            67.24900000000001,
            93.793,
            80.328,
            66.667,
            74.809,
            92.308,
            90.58800000000001,
            30.303,
            44.586,
            31.034,
            88.172,
            84.706,
            36.714999999999996,
            92.308,
            17.647,
            86.36399999999999,
            100.0,
            87.425,
            38.4,
            59.09100000000001,
            71.429,
            61.538000000000004,
            20.408,
            85.95,
            42.623,
            92.121,
            94.416,
            71.698,
            20.741,
            58.333,
            98.824,
            88.393,
            50.70400000000001,
            28.767,
            5.2170000000000005,
            92.473,
            57.260999999999996,
            91.525,
            98.851,
            85.417,
            87.5
         ],
         "mean": [
            65.59266666666667
         ],
         "std": [
            27.628007500190012
         ]
      },
      "time": {
         "values": [
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194,
            0.17378017803033194
         ],
         "mean": [
            0.17378017803033194
         ],
         "std": [
            0.0
         ]
      }
   },
   "LSTM": {
      "acc": {
         "values": [
            88.068,
            78.274,
            93.04599999999999,
            70.06,
            93.309,
            99.524,
            86.351,
            97.426,
            88.761,
            93.333,
            83.439,
            94.408,
            76.522,
            65.443,
            93.976,
            94.828,
            81.75200000000001,
            90.763,
            62.33800000000001,
            59.143,
            63.303,
            88.603,
            76.608,
            73.504,
            96.154,
            96.07,
            94.118,
            95.68100000000001,
            71.0,
            91.729,
            90.244,
            93.08,
            87.96000000000001,
            98.268,
            92.174,
            70.05,
            90.204,
            87.768,
            93.61699999999999,
            97.934,
            62.5,
            82.353,
            72.966,
            96.226,
            94.463,
            87.36500000000001,
            89.121
         ],
         "mean": [
            85.61334042553192
         ],
         "std": [
            11.19453549876218
         ]
      },
      "prediction": {
         "values": [
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Grandparent ⊔ (∃ married.(Grandson ⊓ (∃ hasParent.Daughter)))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Sister ⊔ (∃ hasParent.(Grandchild ⊓ (∃ hasChild.Granddaughter)))",
            "Female ⊓ (∃ hasSibling.(Grandchild ⊓ (∃ hasSibling.Grandparent)))",
            "Grandson ⊔ (∃ married.(Son ⊔ (∃ hasChild.Sister)))",
            "Grandfather ⊔ (∃ hasChild.Brother)",
            "Grandson ⊔ (∃ married.(Child ⊔ PersonWithASibling))",
            "(Daughter ⊓ Daughter) ⊔ (∃ married.Male)",
            "Grandparent ⊔ (∃ married.(Granddaughter ⊔ Grandparent))",
            "Grandparent ⊔ (∃ married.(Grandson ⊓ (∃ hasParent.PersonWithASibling)))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Male ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasSibling.Grandchild)))",
            "Granddaughter ⊓ (∃ hasSibling.(Sister ⊔ (∃ hasParent.Male)))",
            "Brother ⊔ (∃ hasChild.(Grandmother ⊔ (∃ hasChild.Grandparent)))",
            "Female ⊓ (∃ hasParent.(Daughter ⊔ (∃ hasSibling.Mother)))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊔ (∃ hasParent.Grandparent)))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Male ⊔ (∃ married.(Male ⊓ (∃ hasChild.Grandmother)))",
            "Brother ⊔ (∃ hasChild.(Grandchild ⊓ (∃ hasSibling.Parent)))",
            "Grandmother ⊓ (∃ hasChild.(Brother ⊔ Grandfather))",
            "Grandparent ⊔ (∃ married.(Male ⊔ Parent))",
            "Grandfather ⊔ (∃ hasChild.(Grandparent ⊔ Grandson))",
            "Female",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasParent.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.Father)",
            "Mother ⊔ (∃ hasParent.(Granddaughter ⊓ Sister))",
            "Grandson ⊔ (∃ hasParent.Daughter)",
            "Grandson ⊓ (∃ hasParent.Grandfather)",
            "∃ hasChild.(Sister ⊓ (∃ hasChild.Sister))",
            "Person ⊔ (∃ married.(Grandson ⊓ (∃ hasChild.Daughter)))",
            "Sister ⊓ (∃ hasParent.(Child ⊓ (∃ hasChild.Son)))",
            "Brother ⊔ (∃ hasChild.(Sister ⊔ (∃ hasChild.Grandson)))",
            "Sister ⊔ (∃ hasParent.(∃ hasSibling.Daughter))",
            "Grandfather ⊔ (∃ hasChild.(Grandparent ⊓ (∃ hasSibling.Grandmother)))",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Brother ⊔ (∃ hasParent.Male)",
            "Daughter ⊔ (∃ hasChild.(Male ⊔ Son))",
            "Daughter ⊔ (∃ hasParent.(Son ⊓ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊔ (∃ hasSibling.Grandmother)))",
            "Grandson ⊔ (∃ hasParent.Sister)",
            "Female ⊓ (∃ hasSibling.(Grandson ⊔ (∃ hasChild.Brother)))"
         ]
      },
      "f1": {
         "values": [
            83.721,
            62.564,
            88.268,
            39.024,
            84.483,
            93.333,
            81.509,
            94.73700000000001,
            84.462,
            88.63600000000001,
            69.767,
            90.90899999999999,
            60.488,
            17.518,
            91.667,
            75.0,
            46.809,
            67.606,
            34.388999999999996,
            6.5360000000000005,
            7.692,
            71.56,
            60.0,
            54.63400000000001,
            90.566,
            80.0,
            92.73400000000001,
            92.973,
            20.183,
            79.245,
            80.282,
            87.01299999999999,
            77.215,
            92.593,
            52.632,
            57.24399999999999,
            61.29,
            80.952,
            87.324,
            93.333,
            4.651000000000001,
            64.935,
            59.608000000000004,
            91.379,
            91.192,
            69.565,
            45.833
         ],
         "mean": [
            68.25646808510639
         ],
         "std": [
            25.17063274452233
         ]
      },
      "time": {
         "values": [
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814,
            0.13773760199546814
         ],
         "mean": [
            0.13773760199546814
         ],
         "std": [
            0.0
         ]
      }
   }
}