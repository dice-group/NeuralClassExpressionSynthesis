{
   "SetTransformer": {
      "acc": {
         "values": [
            93.05600000000001,
            94.077,
            93.851,
            97.934,
            86.92800000000001,
            97.619,
            89.34,
            84.47200000000001,
            84.13199999999999,
            76.42,
            87.888,
            79.63,
            80.696,
            89.474,
            96.14200000000001,
            89.069,
            97.551,
            94.0,
            75.214,
            92.373,
            98.104,
            98.75500000000001,
            90.523,
            68.81,
            87.77000000000001,
            96.444,
            96.83,
            89.441,
            89.121,
            90.226,
            89.13,
            73.438,
            95.987,
            87.712,
            86.154,
            91.503,
            89.2,
            79.257,
            87.205,
            89.45100000000001,
            96.714,
            97.222,
            76.471,
            96.241,
            93.204,
            92.996,
            96.916
         ],
         "mean": [
            89.46151063829788
         ],
         "std": [
            7.251833056229214
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ Grandfather ⊔ Father",
            "Mother ⊔ (∃ hasChild.Brother)",
            "Grandparent ⊔ (∃ married.Son)",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Sister ⊔ (∃ hasParent.⊤) ⊔ (∃ hasSibling.⊤)",
            "Granddaughter ⊓ (∃ hasSibling.Father) ⊓ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.⊤) ⊔ (∃ hasChild.Male)",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.(Brother ⊔ (∃ hasSibling.Grandparent)))",
            "Mother ⊔ (∃ hasParent.Brother) ⊔ (∃ hasParent.⊤)",
            "Grandfather ⊔ (∃ hasChild.Granddaughter) ⊔ (∃ hasChild.⊤)",
            "Grandparent ⊔ (∃ married.⊤)",
            "Grandmother ⊔ Son",
            "∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Granddaughter))",
            "Male ⊔ (∃ hasParent.(Brother ⊔ Daughter))",
            "(Granddaughter ⊓ (∃ hasSibling.⊤)) ⊔ (∃ hasParent.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasSibling.Daughter)))",
            "Female ⊓ (∃ hasParent.Grandmother)",
            "Grandson ⊔ (∃ married.Brother) ⊔ (∃ hasSibling.⊤)",
            "Grandson ⊓ (∃ hasParent.Son)",
            "Female ⊓ (∃ hasParent.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.⊤)",
            "Brother",
            "Brother ⊔ (∃ hasChild.(PersonWithASibling ⊓ (∃ hasSibling.Son)))",
            "Grandmother ⊓ (∃ hasChild.Granddaughter)",
            "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Granddaughter ⊓ (∃ hasParent.⊤)",
            "Person ⊓ (∃ married.(Sister ⊔ (∃ hasParent.Daughter)))",
            "∃ hasChild.⊤",
            "(Mother ⊔ (∃ hasParent.⊤)) ⊓ (∃ hasSibling.⊤)",
            "Grandson ⊔ (∃ hasParent.(Daughter ⊔ (∃ hasChild.Father)))",
            "Grandson ⊓ (∃ hasParent.Granddaughter)",
            "∃ hasChild.(Parent ⊓ (∃ hasChild.Grandson))",
            "Grandfather ⊔ (∃ hasChild.(Son ⊔ (∃ hasChild.Daughter)))",
            "(Sister ⊔ (∃ hasParent.Brother)) ⊓ (∃ hasChild.⊤)",
            "Brother ⊔ (∃ hasChild.Grandparent)",
            "Sister ⊔ (∃ hasParent.Brother) ⊔ (∃ hasSibling.⊤)",
            "Grandfather ⊓ (∃ hasChild.⊤) ⊓ (∃ hasChild.Grandfather)",
            "Grandfather ⊓ (∃ hasParent.⊤)",
            "∃ hasParent.Daughter",
            "Grandson ⊔ (∃ married.Brother)",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Daughter)))",
            "∃ hasParent.(Grandson ⊔ Son)",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            91.40899999999999,
            88.889,
            90.256,
            93.333,
            76.19,
            54.545,
            87.71900000000001,
            73.68400000000001,
            74.882,
            61.751,
            80.597,
            72.0,
            63.473,
            14.285999999999998,
            94.94200000000001,
            57.143,
            92.5,
            81.48100000000001,
            58.768,
            64.0,
            71.429,
            96.0,
            83.799,
            19.835,
            71.186,
            78.947,
            96.057,
            83.49499999999999,
            45.833,
            74.51,
            82.92699999999999,
            43.708999999999996,
            93.407,
            25.641000000000002,
            55.00000000000001,
            85.714,
            60.870000000000005,
            61.714,
            75.0,
            44.444,
            53.333,
            92.473,
            59.184000000000005,
            91.525,
            89.119,
            80.435,
            83.721
         ],
         "mean": [
            71.72670212765959
         ],
         "std": [
            20.005649810411157
         ]
      },
      "time": {
         "values": [
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443,
            0.027745867768923443
         ],
         "mean": [
            0.027745867768923453
         ],
         "std": [
            1.0408340855860843e-17
         ]
      }
   },
   "GRU": {
      "acc": {
         "values": [
            100.0,
            96.324,
            97.735,
            74.845,
            87.32900000000001,
            97.619,
            89.34,
            84.47200000000001,
            79.3,
            86.897,
            95.423,
            90.997,
            72.94500000000001,
            95.413,
            99.099,
            89.011,
            97.2,
            85.879,
            98.261,
            92.411,
            97.942,
            100.0,
            89.342,
            96.8,
            69.876,
            88.385,
            89.441,
            97.26,
            91.729,
            87.03699999999999,
            86.02499999999999,
            78.082,
            94.286,
            91.129,
            90.461,
            99.592,
            75.232,
            96.14,
            100.0,
            98.544,
            79.298,
            79.07,
            95.52199999999999,
            91.88300000000001,
            91.135,
            93.42099999999999
         ],
         "mean": [
            90.39417391304347
         ],
         "std": [
            7.914649173208604
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ Grandfather",
            "Mother ⊔ (Mother ⊓ Granddaughter)",
            "Grandparent ⊔ (∃ married.(Son ⊔ (∃ hasParent.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Sister ⊔ (∃ hasParent.Granddaughter) ⊔ (∃ hasSibling.⊤)",
            "Granddaughter ⊓ (∃ hasSibling.Grandmother)",
            "Grandson ⊔ (∃ married.⊤)",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.(Granddaughter ⊔ (∃ hasParent.Sister)))",
            "Person ⊓ Mother",
            "Grandfather ⊔ (∃ hasChild.(Mother ⊔ Sister))",
            "Grandparent ⊔ (∃ married.Granddaughter)",
            "∃ hasParent.(Grandson ⊔ Grandson)",
            "∃ hasChild.(Father ⊓ (∃ hasSibling.Granddaughter))",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasSibling.Brother)))",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊔ Sister))",
            "Daughter ⊓ (∃ hasParent.(PersonWithASibling ⊔ (∃ hasChild.Mother)))",
            "Grandson ⊔ (∃ married.(Father ⊔ PersonWithASibling))",
            "Grandson ⊓ (∃ hasParent.Grandchild)",
            "∃ hasParent.Brother",
            "Grandfather ⊔ (∃ hasChild.(Grandparent ⊓ (∃ hasSibling.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊔ (∃ hasChild.PersonWithASibling)))",
            "Brother ⊔ (∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Mother)))",
            "(Grandmother ⊓ (∃ hasChild.Granddaughter)) ⊔ (∃ hasChild.⊤)",
            "Grandparent ⊔ (∃ married.(Grandchild ⊔ (∃ hasSibling.Daughter)))",
            "Parent ⊔ (∃ hasChild.Son)",
            "Female ⊓ (∃ hasParent.(Grandchild ⊔ Grandchild))",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasParent.Daughter)))",
            "Grandparent ⊔ (∃ married.(Father ⊔ (∃ hasSibling.Daughter)))",
            "Mother ⊔ (∃ hasParent.(Grandmother ⊔ (∃ hasSibling.Mother)))",
            "Grandson ⊔ (∃ hasParent.Granddaughter) ⊔ (∃ hasChild.⊤)",
            "Grandson ⊓ (∃ hasParent.Male)",
            "∃ hasChild.(Brother ⊓ Brother)",
            "Grandparent ⊔ (∃ hasChild.Granddaughter)",
            "Sister ⊔ Sister",
            "Brother ⊔ (∃ hasChild.Grandfather)",
            "Daughter ⊔ (∃ hasParent.PersonWithASibling)",
            "Grandfather ⊓ (∃ hasChild.⊤)",
            "Grandfather ⊓ (∃ hasParent.Granddaughter)",
            "Sister ⊔ (∃ hasParent.Grandson)",
            "Grandson ⊔ (∃ married.(Granddaughter ⊔ Sister))",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ Grandfather))",
            "Grandparent ⊔ (∃ married.(Grandchild ⊓ (∃ hasParent.Grandmother)))",
            "∃ hasParent.(Son ⊔ Child)",
            "Granddaughter ⊓ (∃ hasSibling.Son)"
         ]
      },
      "f1": {
         "values": [
            100.0,
            92.308,
            96.61800000000001,
            49.057,
            74.126,
            54.545,
            87.71900000000001,
            73.68400000000001,
            66.351,
            72.464,
            91.391,
            85.263,
            21.782,
            54.545,
            94.73700000000001,
            73.214,
            92.135,
            79.668,
            92.308,
            37.037,
            93.506,
            100.0,
            83.0,
            90.90899999999999,
            32.168,
            84.29100000000001,
            83.49499999999999,
            78.571,
            79.245,
            79.208,
            76.923,
            67.47999999999999,
            80.55600000000001,
            68.571,
            83.429,
            98.824,
            50.617000000000004,
            92.903,
            100.0,
            40.0,
            44.86,
            66.038,
            90.0,
            86.631,
            81.48100000000001,
            59.458999999999996
         ],
         "mean": [
            75.67645652173914
         ],
         "std": [
            19.379530127011904
         ]
      },
      "time": {
         "values": [
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574,
            0.028651873270670574
         ],
         "mean": [
            0.028651873270670584
         ],
         "std": [
            1.0408340855860843e-17
         ]
      }
   },
   "LSTM": {
      "acc": {
         "values": [
            86.33999999999999,
            85.87,
            93.851,
            0.0,
            93.333,
            97.143,
            0.0,
            91.544,
            86.471,
            90.69,
            80.743,
            91.875,
            93.069,
            92.92,
            94.753,
            94.196,
            98.381,
            93.927,
            97.315,
            93.913,
            67.647,
            97.131,
            92.833,
            91.892,
            93.333,
            97.77799999999999,
            94.75200000000001,
            89.441,
            71.0,
            93.536,
            90.13600000000001,
            94.932,
            96.271,
            94.80499999999999,
            78.519,
            83.75,
            91.429,
            88.254,
            94.891,
            75.0,
            84.08200000000001,
            82.353,
            77.657,
            95.203,
            93.793,
            95.331,
            100.0
         ],
         "mean": [
            86.42729787234043
         ],
         "std": [
            19.56012677798502
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ (∃ married.⊤)",
            "Grandmother ⊔ (∃ hasChild.(Grandfather ⊓ Grandson))",
            "Grandparent ⊔ (∃ married.(Male ⊓ (∃ hasParent.Male)))",
            "Grandfather ⊓ (∃ married.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Sister ⊔ (∃ hasParent.(Grandchild ⊔ (∃ hasChild.Granddaughter)))",
            "Female ⊓ (∃ hasSibling.(Grandchild ⊓ (∃ hasChild.Mother)))",
            "Grandson ⊓ (∃ married.Brother)",
            "Grandfather ⊔ (∃ hasChild.(Brother ⊓ Father))",
            "Grandson ⊔ (∃ married.(PersonWithASibling ⊔ Sister))",
            "(Female ⊓ Mother) ⊔ (∃ married.Grandson)",
            "Grandfather ⊔ (∃ married.(Daughter ⊓ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Father ⊔ (∃ hasParent.Daughter)))",
            "PersonWithASibling ⊔ (∃ hasParent.(Grandchild ⊔ Grandparent))",
            "∃ hasChild.(Parent ⊓ Grandmother)",
            "Male ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasChild.Grandmother)))",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandson)))",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊔ (∃ hasSibling.Grandfather)))",
            "Female ⊓ (∃ hasParent.(PersonWithASibling ⊔ (∃ hasChild.Grandson)))",
            "Grandson ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Grandparent)))",
            "Grandson ⊓ (∃ hasParent.Grandson)",
            "Person ⊓ (∃ hasParent.Mother)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasParent.Daughter)))",
            "Daughter ⊔ (∃ hasParent.Grandfather)",
            "Grandparent ⊔ (∃ married.(Granddaughter ⊓ (∃ hasChild.Daughter)))",
            "Brother ⊔ (∃ hasChild.(Grandchild ⊓ (∃ hasSibling.Grandparent)))",
            "Grandmother ⊓ (∃ hasChild.(Brother ⊔ (∃ hasSibling.Brother)))",
            "Grandparent ⊔ (∃ married.Male)",
            "Grandfather ⊔ (∃ hasChild.⊤)",
            "Female",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasSibling.Brother)))",
            "Grandparent ⊔ (∃ hasChild.(Father ⊔ (∃ hasChild.Daughter)))",
            "Mother ⊔ (∃ hasParent.(∃ hasSibling.Sister))",
            "Grandson ⊔ (∃ hasParent.(∃ hasChild.Mother))",
            "Grandson ⊓ (∃ hasParent.(∃ hasSibling.Grandmother))",
            "Person ⊓ (∃ hasChild.Granddaughter)",
            "Grandfather ⊔ (∃ married.(Grandson ⊔ (∃ hasChild.Daughter)))",
            "Sister ⊓ (∃ hasParent.(Grandfather ⊓ (∃ hasChild.Granddaughter)))",
            "Brother ⊔ (∃ hasChild.(Sister ⊔ (∃ hasChild.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(Daughter ⊓ (∃ hasSibling.Granddaughter)))",
            "Grandfather ⊔ (∃ hasChild.(Grandchild ⊔ (∃ hasChild.Grandmother)))",
            "Grandson ⊓ (∃ hasParent.⊤)",
            "Grandchild ⊔ (∃ hasParent.Male)",
            "Brother ⊔ (∃ married.Male)",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ (∃ hasChild.Grandson)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊓ Grandparent))",
            "∃ hasParent.(Son ⊔ (∃ hasParent.Grandchild))",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            83.38600000000001,
            64.22,
            90.256,
            0.0,
            87.075,
            40.0,
            0.0,
            80.342,
            80.0,
            81.879,
            56.489,
            87.619,
            88.398,
            50.0,
            92.511,
            58.065,
            95.34899999999999,
            80.0,
            95.652,
            66.667,
            9.174,
            90.90899999999999,
            86.957,
            85.366,
            80.899,
            87.805,
            93.182,
            83.49499999999999,
            20.183,
            83.81,
            81.28999999999999,
            91.32900000000001,
            93.714,
            73.913,
            25.641000000000002,
            71.739,
            67.692,
            80.423,
            89.23100000000001,
            46.98,
            17.021,
            64.935,
            66.935,
            89.60000000000001,
            88.608,
            87.75500000000001,
            100.0
         ],
         "mean": [
            70.98923404255319
         ],
         "std": [
            26.348444060979876
         ]
      },
      "time": {
         "values": [
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213,
            0.023992598056793213
         ],
         "mean": [
            0.023992598056793213
         ],
         "std": [
            0.0
         ]
      }
   }
}