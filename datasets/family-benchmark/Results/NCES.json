{
   "SetTransformer": {
      "acc": {
         "values": [
            93.05600000000001,
            75.556,
            79.891,
            97.934,
            66.048,
            99.115,
            58.333,
            89.34,
            75.556,
            84.13199999999999,
            77.778,
            78.611,
            81.593,
            80.696,
            89.474,
            96.14200000000001,
            84.937,
            97.551,
            68.05600000000001,
            64.5,
            54.449999999999996,
            57.49999999999999,
            98.75500000000001,
            70.777,
            81.389,
            87.77000000000001,
            62.5,
            96.83,
            80.0,
            59.167,
            90.226,
            79.72200000000001,
            74.185,
            95.987,
            58.445,
            86.154,
            91.503,
            67.58999999999999,
            80.0,
            70.43,
            85.83,
            57.221999999999994,
            62.334,
            72.56899999999999,
            96.241,
            93.204,
            92.996,
            96.916
         ],
         "mean": [
            79.97897916666666
         ],
         "std": [
            13.315359341579908
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Female ⊔ Grandfather ⊔ Father",
            "(Daughter ⊔ Parent) ⊓ (∃ married.⊤)",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandson ⊔ (∃ married.⊤) ⊔ (∃ hasChild.Male)",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandson ⊔ (∃ married.(Brother ⊔ (∃ hasSibling.Grandparent)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandmother ⊔ Son",
            "∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Granddaughter))",
            "Male ⊔ (∃ hasParent.(Brother ⊔ Daughter))",
            "(Grandfather ⊔ (∃ hasChild.Grandfather)) ⊓ (∃ hasChild.Grandfather)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasSibling.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Brother ⊔ (∃ hasChild.(PersonWithASibling ⊓ (∃ hasSibling.Son)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Person ⊓ (∃ married.(Sister ⊔ (∃ hasParent.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandson ⊔ (∃ hasParent.(Daughter ⊔ (∃ hasChild.Father)))",
            "Female ⊔ Grandfather ⊔ Father",
            "∃ hasChild.(Parent ⊓ (∃ hasChild.Grandson))",
            "Grandfather ⊔ (∃ hasChild.(Son ⊔ (∃ hasChild.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "(Grandfather ⊔ (∃ hasChild.Grandfather)) ⊓ (∃ hasChild.Grandfather)",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Daughter)))",
            "∃ hasParent.(Grandson ⊔ Son)",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            91.40899999999999,
            61.404,
            71.318,
            93.333,
            42.342,
            98.893,
            9.639000000000001,
            87.71900000000001,
            61.404,
            74.882,
            66.102,
            67.782,
            73.92999999999999,
            63.473,
            14.285999999999998,
            94.94200000000001,
            5.263,
            92.5,
            42.786,
            44.094,
            6.451999999999999,
            6.135,
            96.0,
            53.21900000000001,
            73.092,
            71.186,
            25.413999999999998,
            96.057,
            70.492,
            13.017999999999999,
            74.51,
            69.959,
            59.916000000000004,
            93.407,
            17.112,
            55.00000000000001,
            85.714,
            41.791,
            72.32499999999999,
            52.174,
            36.364000000000004,
            4.938,
            31.730999999999998,
            61.806000000000004,
            91.525,
            89.119,
            80.435,
            83.721
         ],
         "mean": [
            59.79402083333333
         ],
         "std": [
            28.768635455626544
         ]
      },
      "time": {
         "values": [
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707,
            0.00739299754301707
         ],
         "mean": [
            0.00739299754301707
         ],
         "std": [
            0.0
         ]
      }
   },
   "GRU": {
      "acc": {
         "values": [
            78.20899999999999,
            96.324,
            97.735,
            71.94,
            70.255,
            95.833,
            97.619,
            73.485,
            77.485,
            79.3,
            83.582,
            95.423,
            90.997,
            72.94500000000001,
            95.413,
            63.119,
            99.099,
            89.011,
            97.2,
            85.879,
            56.510000000000005,
            92.411,
            97.942,
            100.0,
            89.342,
            96.8,
            67.164,
            88.385,
            89.441,
            92.661,
            91.729,
            87.03699999999999,
            86.02499999999999,
            67.553,
            94.286,
            91.129,
            90.461,
            99.592,
            75.232,
            96.14,
            70.746,
            98.544,
            79.298,
            79.07,
            95.52199999999999,
            91.88300000000001,
            91.135,
            93.42099999999999
         ],
         "mean": [
            86.67316666666666
         ],
         "std": [
            11.010382772890122
         ]
      },
      "prediction": {
         "values": [
            "Person ⊓ Mother",
            "Mother ⊔ (Mother ⊓ Granddaughter)",
            "Grandparent ⊔ (∃ married.(Son ⊔ (∃ hasParent.Daughter)))",
            "Female ⊔ Grandfather",
            "Female ⊔ Grandfather",
            "Grandparent ⊔ Parent",
            "Granddaughter ⊓ (∃ hasSibling.Grandmother)",
            "Female ⊔ Grandfather",
            "Female ⊔ Grandfather",
            "Grandson ⊔ (∃ married.(Granddaughter ⊔ (∃ hasParent.Sister)))",
            "Female ⊔ Grandfather",
            "Grandfather ⊔ (∃ hasChild.(Mother ⊔ Sister))",
            "Grandparent ⊔ (∃ married.Granddaughter)",
            "∃ hasParent.(Grandson ⊔ Grandson)",
            "∃ hasChild.(Father ⊓ (∃ hasSibling.Granddaughter))",
            "Female ⊔ Grandfather",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasSibling.Brother)))",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊔ Sister))",
            "Daughter ⊓ (∃ hasParent.(PersonWithASibling ⊔ (∃ hasChild.Mother)))",
            "Grandson ⊔ (∃ married.(Father ⊔ PersonWithASibling))",
            "Female ⊔ Grandfather",
            "∃ hasParent.Brother",
            "Grandfather ⊔ (∃ hasChild.(Grandparent ⊓ (∃ hasSibling.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊔ (∃ hasChild.PersonWithASibling)))",
            "Brother ⊔ (∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Mother)))",
            "Female ⊔ Grandfather",
            "Grandparent ⊔ (∃ married.(Grandchild ⊔ (∃ hasSibling.Daughter)))",
            "Parent ⊔ (∃ hasChild.Son)",
            "(Grandfather ⊔ (∃ hasChild.Grandparent)) ⊓ (∃ hasSibling.Grandfather)",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasParent.Daughter)))",
            "Grandparent ⊔ (∃ married.(Father ⊔ (∃ hasSibling.Daughter)))",
            "Mother ⊔ (∃ hasParent.(Grandmother ⊔ (∃ hasSibling.Mother)))",
            "Female ⊔ Grandfather",
            "Grandson ⊓ (∃ hasParent.Male)",
            "∃ hasChild.(Brother ⊓ Brother)",
            "Grandparent ⊔ (∃ hasChild.Granddaughter)",
            "Sister ⊔ Sister",
            "Brother ⊔ (∃ hasChild.Grandfather)",
            "Daughter ⊔ (∃ hasParent.PersonWithASibling)",
            "Female ⊔ Grandfather",
            "Grandfather ⊓ (∃ hasParent.Granddaughter)",
            "Sister ⊔ (∃ hasParent.Grandson)",
            "Grandson ⊔ (∃ married.(Granddaughter ⊔ Sister))",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ Grandfather))",
            "Grandparent ⊔ (∃ married.(Grandchild ⊓ (∃ hasParent.Grandmother)))",
            "∃ hasParent.(Son ⊔ Child)",
            "Granddaughter ⊓ (∃ hasSibling.Son)"
         ]
      },
      "f1": {
         "values": [
            62.175999999999995,
            92.308,
            96.61800000000001,
            45.349000000000004,
            46.701,
            94.488,
            54.545,
            62.897999999999996,
            62.068999999999996,
            66.351,
            73.934,
            91.391,
            85.263,
            21.782,
            54.545,
            41.569,
            94.73700000000001,
            73.214,
            92.135,
            79.668,
            2.484,
            37.037,
            93.506,
            100.0,
            83.0,
            90.90899999999999,
            29.487000000000002,
            84.29100000000001,
            83.49499999999999,
            0.0,
            79.245,
            79.208,
            76.923,
            46.018,
            80.55600000000001,
            68.571,
            83.429,
            98.824,
            50.617000000000004,
            92.903,
            41.667,
            40.0,
            44.86,
            66.038,
            90.0,
            86.631,
            81.48100000000001,
            59.458999999999996
         ],
         "mean": [
            67.96625
         ],
         "std": [
            24.659307211392484
         ]
      },
      "time": {
         "values": [
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553,
            0.078795259197553
         ],
         "mean": [
            0.078795259197553
         ],
         "std": [
            0.0
         ]
      }
   },
   "LSTM": {
      "acc": {
         "values": [
            86.33999999999999,
            70.10300000000001,
            93.851,
            0.0,
            93.333,
            73.775,
            97.143,
            83.16799999999999,
            91.544,
            86.471,
            90.69,
            80.743,
            91.875,
            93.069,
            55.155,
            94.753,
            94.196,
            98.381,
            93.927,
            97.315,
            53.730999999999995,
            67.647,
            97.131,
            68.354,
            91.892,
            93.333,
            97.77799999999999,
            88.402,
            74.227,
            71.0,
            93.536,
            90.13600000000001,
            94.932,
            96.271,
            94.80499999999999,
            78.519,
            83.75,
            91.429,
            88.254,
            94.891,
            75.0,
            53.093,
            82.353,
            77.657,
            95.203,
            70.69,
            95.331,
            100.0
         ],
         "mean": [
            83.85785416666667
         ],
         "std": [
            17.224198450133056
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ (∃ married.⊤)",
            "Female ⊔ (∃ married.⊤)",
            "Grandparent ⊔ (∃ married.(Male ⊓ (∃ hasParent.Male)))",
            "Grandfather ⊓ (∃ married.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Sister ⊔ (∃ hasParent.(Grandchild ⊔ (∃ hasChild.Granddaughter)))",
            "(Daughter ⊔ PersonWithASibling) ⊓ (∃ married.⊤)",
            "Female ⊓ (∃ hasSibling.(Grandchild ⊓ (∃ hasChild.Mother)))",
            "Female ⊔ (∃ married.⊤)",
            "Grandfather ⊔ (∃ hasChild.(Brother ⊓ Father))",
            "Grandson ⊔ (∃ married.(PersonWithASibling ⊔ Sister))",
            "(Female ⊓ Mother) ⊔ (∃ married.Grandson)",
            "Grandfather ⊔ (∃ married.(Daughter ⊓ (∃ hasSibling.Daughter)))",
            "Grandparent ⊔ (∃ married.(Father ⊔ (∃ hasParent.Daughter)))",
            "PersonWithASibling ⊔ (∃ hasParent.(Grandchild ⊔ Grandparent))",
            "Female ⊔ (∃ married.⊤)",
            "Male ⊔ (∃ hasParent.(Granddaughter ⊓ (∃ hasChild.Grandmother)))",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandson)))",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊔ (∃ hasSibling.Grandfather)))",
            "Female ⊓ (∃ hasParent.(PersonWithASibling ⊔ (∃ hasChild.Grandson)))",
            "Grandson ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Grandparent)))",
            "Female ⊔ (∃ married.⊤)",
            "Person ⊓ (∃ hasParent.Mother)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasParent.Daughter)))",
            "Female ⊔ (∃ married.⊤)",
            "Grandparent ⊔ (∃ married.(Granddaughter ⊓ (∃ hasChild.Daughter)))",
            "Brother ⊔ (∃ hasChild.(Grandchild ⊓ (∃ hasSibling.Grandparent)))",
            "Grandmother ⊓ (∃ hasChild.(Brother ⊔ (∃ hasSibling.Brother)))",
            "Female ⊔ (∃ married.⊤)",
            "Female ⊔ (∃ married.⊤)",
            "Female",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasSibling.Brother)))",
            "Grandparent ⊔ (∃ hasChild.(Father ⊔ (∃ hasChild.Daughter)))",
            "Mother ⊔ (∃ hasParent.(∃ hasSibling.Sister))",
            "Grandson ⊔ (∃ hasParent.(∃ hasChild.Mother))",
            "Grandson ⊓ (∃ hasParent.(∃ hasSibling.Grandmother))",
            "Person ⊓ (∃ hasChild.Granddaughter)",
            "Grandfather ⊔ (∃ married.(Grandson ⊔ (∃ hasChild.Daughter)))",
            "Sister ⊓ (∃ hasParent.(Grandfather ⊓ (∃ hasChild.Granddaughter)))",
            "Brother ⊔ (∃ hasChild.(Sister ⊔ (∃ hasChild.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(Daughter ⊓ (∃ hasSibling.Granddaughter)))",
            "Grandfather ⊔ (∃ hasChild.(Grandchild ⊔ (∃ hasChild.Grandmother)))",
            "Female ⊔ (∃ married.⊤)",
            "Grandchild ⊔ (∃ hasParent.Male)",
            "Brother ⊔ (∃ married.Male)",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ (∃ hasChild.Grandson)))",
            "(Grandfather ⊔ (∃ hasChild.Grandmother)) ⊓ (∃ hasParent.Daughter)",
            "∃ hasParent.(Son ⊔ (∃ hasParent.Grandchild))",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            83.38600000000001,
            54.688,
            90.256,
            0.0,
            87.075,
            54.271,
            40.0,
            79.762,
            80.342,
            80.0,
            81.879,
            56.489,
            87.619,
            88.398,
            12.121,
            92.511,
            58.065,
            95.34899999999999,
            80.0,
            95.652,
            13.084000000000001,
            9.174,
            90.90899999999999,
            52.107000000000006,
            85.366,
            80.899,
            87.805,
            86.239,
            63.235,
            20.183,
            83.81,
            81.28999999999999,
            91.32900000000001,
            93.714,
            73.913,
            25.641000000000002,
            71.739,
            67.692,
            80.423,
            89.23100000000001,
            46.98,
            4.211,
            64.935,
            66.935,
            89.60000000000001,
            6.593,
            87.75500000000001,
            100.0
         ],
         "mean": [
            66.9303125
         ],
         "std": [
            28.454356634175436
         ]
      },
      "time": {
         "values": [
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425,
            0.19336521128813425
         ],
         "mean": [
            0.19336521128813425
         ],
         "std": [
            0.0
         ]
      }
   }
}