{
   "SetTransformer+GRU": {
      "acc": {
         "values": [
            0.0,
            70.1,
            79.891,
            66.944,
            66.048,
            93.333,
            97.619,
            77.556,
            75.556,
            88.43900000000001,
            0.0,
            78.611,
            68.771,
            78.767,
            95.413,
            0.0,
            97.77799999999999,
            67.5,
            94.821,
            85.879,
            54.449999999999996,
            57.49999999999999,
            97.942,
            100.0,
            92.13799999999999,
            96.8,
            62.5,
            88.385,
            83.00699999999999,
            92.661,
            91.729,
            79.72200000000001,
            86.72800000000001,
            69.25099999999999,
            94.14200000000001,
            62.778,
            78.611,
            99.592,
            80.0,
            95.804,
            65.833,
            57.221999999999994,
            62.334,
            72.56899999999999,
            95.52199999999999,
            99.31,
            93.796,
            93.42099999999999
         ],
         "mean": [
            76.80777083333334
         ],
         "std": [
            23.809536186718322
         ]
      },
      "prediction": {
         "values": [
            "Person ⊓ (∃ married.(Brother ⊓ Granddaughter))",
            "(Granddaughter ⊓ (∃ hasSibling.Granddaughter)) ⊔ (∃ hasParent.Brother)",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Granddaughter ⊓ (∃ hasSibling.Grandmother)",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandson ⊔ (∃ married.(Father ⊔ (∃ hasParent.Sister)))",
            "Person ⊓ (∃ married.(Brother ⊓ Granddaughter))",
            "Female ⊔ Grandfather ⊔ Father",
            "(Grandfather ⊔ (∃ hasChild.Grandparent)) ⊓ (∃ hasSibling.Grandfather)",
            "(Granddaughter ⊓ (∃ hasSibling.Granddaughter)) ⊔ (∃ hasParent.Brother)",
            "∃ hasChild.(Father ⊓ (∃ hasSibling.Granddaughter))",
            "Father ⊓ (Grandfather ⊔ Daughter) ⊓ Sister",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasParent.Brother)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊓ (∃ hasParent.(Grandmother ⊔ (∃ hasChild.Brother)))",
            "Grandson ⊔ (∃ married.(Father ⊔ PersonWithASibling))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandfather ⊔ (∃ hasChild.(Grandparent ⊓ (∃ hasSibling.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊔ (∃ hasChild.Daughter)))",
            "Brother ⊔ (∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Mother)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandparent ⊔ (∃ married.(Grandchild ⊔ (∃ hasSibling.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.Parent)",
            "(Grandfather ⊔ (∃ hasChild.Grandparent)) ⊓ (∃ hasSibling.Grandfather)",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasParent.Daughter)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Mother ⊔ (∃ hasParent.(Grandmother ⊔ (∃ hasSibling.Sister)))",
            "Female ⊔ Grandfather ⊔ Father",
            "Grandson ⊓ (∃ hasParent.PersonWithASibling)",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Sister ⊔ Sister",
            "Female ⊔ Grandfather ⊔ Father",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ PersonWithASibling))",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Female ⊔ Grandfather ⊔ Father",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ Grandfather))",
            "Grandparent ⊔ (∃ married.(Sister ⊓ (∃ hasParent.Grandmother)))",
            "∃ hasParent.(Son ⊔ Sister)",
            "Granddaughter ⊓ (∃ hasSibling.Son)"
         ]
      },
      "f1": {
         "values": [
            0.0,
            16.667,
            71.318,
            39.594,
            42.342,
            91.781,
            54.545,
            70.779,
            61.404,
            83.871,
            0.0,
            67.782,
            9.615,
            47.458,
            54.545,
            0.0,
            87.805,
            41.205999999999996,
            84.706,
            79.668,
            6.451999999999999,
            6.135,
            93.506,
            100.0,
            87.923,
            90.90899999999999,
            25.413999999999998,
            84.29100000000001,
            66.667,
            0.0,
            79.245,
            69.959,
            78.607,
            52.59,
            76.667,
            26.374,
            67.782,
            98.824,
            72.32499999999999,
            92.308,
            36.269,
            4.938,
            31.730999999999998,
            61.806000000000004,
            90.0,
            98.851,
            86.614,
            59.458999999999996
         ],
         "mean": [
            57.306916666666666
         ],
         "std": [
            31.635580407215368
         ]
      },
      "time": {
         "values": [
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928,
            0.23792418340841928
         ],
         "mean": [
            0.23792418340841928
         ],
         "std": [
            0.0
         ]
      }
   },
   "SetTransformer+LSTM": {
      "acc": {
         "values": [
            86.33999999999999,
            93.00699999999999,
            93.04599999999999,
            97.934,
            93.333,
            73.775,
            97.143,
            59.207,
            87.17099999999999,
            86.471,
            62.539,
            93.709,
            77.577,
            78.96600000000001,
            95.536,
            94.461,
            94.222,
            97.2,
            97.2,
            97.315,
            53.730999999999995,
            81.496,
            98.354,
            68.354,
            92.568,
            94.94200000000001,
            57.989999999999995,
            88.402,
            74.227,
            89.17699999999999,
            90.494,
            73.969,
            96.56400000000001,
            96.405,
            84.462,
            78.519,
            83.75,
            94.961,
            86.322,
            94.891,
            89.098,
            53.093,
            60.0,
            84.722,
            95.865,
            96.259,
            94.94200000000001,
            100.0
         ],
         "mean": [
            85.6189375
         ],
         "std": [
            12.961835718122405
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ (∃ married.⊤)",
            "Mother ⊔ (∃ hasChild.(Brother ⊓ Grandson))",
            "Grandparent ⊔ (∃ married.(Son ⊓ (∃ hasParent.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊓ (∃ hasChild.Grandfather)))",
            "Sister ⊔ (∃ hasParent.(Grandchild ⊔ (∃ hasChild.Granddaughter)))",
            "(Daughter ⊔ PersonWithASibling) ⊓ (∃ married.⊤)",
            "Female ⊓ (∃ hasSibling.(Granddaughter ⊓ (∃ hasChild.Mother)))",
            "(Grandfather ⊔ (∃ hasChild.Grandmother)) ⊓ (∃ hasSibling.Daughter)",
            "Grandfather ⊔ (∃ hasChild.(Brother ⊔ Grandson))",
            "Grandson ⊔ (∃ married.(PersonWithASibling ⊔ Sister))",
            "Person ⊓ Grandson",
            "Grandfather ⊔ (∃ married.(Sister ⊔ (∃ hasChild.Daughter)))",
            "Female ⊔ (∃ married.⊤)",
            "∃ hasParent.Sister",
            "∃ hasChild.(Parent ⊓ (∃ hasSibling.Grandson))",
            "Male ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Grandchild)))",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Brother)))",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊔ (∃ hasSibling.Grandfather)))",
            "Female ⊓ (∃ hasParent.(PersonWithASibling ⊔ (∃ hasChild.Mother)))",
            "Grandson ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Grandparent)))",
            "Female ⊔ (∃ married.⊤)",
            "Female ⊓ (∃ hasParent.Mother)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasSibling.Daughter)))",
            "Female ⊔ (∃ married.⊤)",
            "Grandparent ⊔ (∃ married.(Brother ⊓ (∃ hasChild.Daughter)))",
            "Brother ⊔ (∃ hasChild.(Grandchild ⊓ (∃ hasSibling.Mother)))",
            "Female ⊔ (∃ married.⊤)",
            "Female ⊔ (∃ married.⊤)",
            "Female ⊔ (∃ married.⊤)",
            "Female ⊓ (∃ hasParent.Daughter)",
            "Person ⊓ (∃ married.(Sister ⊔ (∃ hasSibling.Brother)))",
            "Female ⊔ (∃ married.⊤)",
            "Mother ⊔ (∃ hasParent.Sister)",
            "Grandson ⊔ (∃ hasParent.Mother)",
            "(Granddaughter ⊓ (∃ hasSibling.Mother)) ⊔ (∃ hasParent.Brother)",
            "∃ hasChild.Granddaughter",
            "Grandfather ⊔ (∃ married.(Grandson ⊔ (∃ hasChild.Daughter)))",
            "Sister ⊔ (∃ hasParent.(Grandfather ⊓ (∃ hasChild.Granddaughter)))",
            "Brother ⊔ (∃ hasChild.(Brother ⊔ (∃ hasChild.Grandson)))",
            "Daughter ⊔ (∃ hasParent.(Daughter ⊓ (∃ hasSibling.Granddaughter)))",
            "Grandfather ⊔ (∃ hasChild.(Brother ⊔ (∃ hasChild.Grandmother)))",
            "Female ⊔ (∃ married.⊤)",
            "Female ⊔ (∃ married.⊤)",
            "Grandson ⊔ (∃ married.Male)",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ (∃ hasChild.Daughter)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊓ (∃ hasSibling.Daughter)))",
            "∃ hasParent.(Son ⊔ (∃ hasParent.Brother))",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            83.38600000000001,
            86.48599999999999,
            88.268,
            93.333,
            87.075,
            54.271,
            40.0,
            8.860999999999999,
            76.364,
            80.0,
            0.0,
            89.503,
            69.474,
            46.957,
            70.588,
            92.776,
            60.606,
            92.135,
            92.135,
            95.652,
            13.084000000000001,
            17.544,
            94.872,
            52.107000000000006,
            86.747,
            86.598,
            22.009999999999998,
            86.239,
            63.235,
            24.242,
            74.227,
            62.731,
            94.048,
            94.416,
            33.898,
            25.641000000000002,
            71.739,
            86.869,
            78.469,
            89.23100000000001,
            70.707,
            4.211,
            32.202999999999996,
            78.927,
            90.598,
            93.642,
            86.598,
            100.0
         ],
         "mean": [
            67.13964583333333
         ],
         "std": [
            28.774962298331502
         ]
      },
      "time": {
         "values": [
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145,
            0.24149516224861145
         ],
         "mean": [
            0.24149516224861145
         ],
         "std": [
            0.0
         ]
      }
   },
   "GRU+LSTM": {
      "acc": {
         "values": [
            93.05600000000001,
            94.928,
            93.04599999999999,
            98.76,
            92.683,
            99.115,
            58.333,
            80.0,
            93.972,
            90.058,
            77.778,
            93.709,
            91.875,
            76.768,
            92.793,
            65.75800000000001,
            97.77799999999999,
            97.59,
            97.2,
            100.0,
            54.449999999999996,
            57.49999999999999,
            98.354,
            100.0,
            91.892,
            96.8,
            62.5,
            97.681,
            96.321,
            97.26,
            93.536,
            89.80900000000001,
            74.185,
            96.405,
            94.286,
            94.73700000000001,
            84.731,
            67.58999999999999,
            93.333,
            70.43,
            93.24900000000001,
            57.221999999999994,
            82.353,
            95.05799999999999,
            96.947,
            93.793,
            95.331,
            100.0
         ],
         "mean": [
            87.7281875
         ],
         "std": [
            13.200478417239673
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ (∃ hasChild.⊤)",
            "Mother ⊔ (∃ hasChild.(Grandfather ⊓ Grandson))",
            "Grandparent ⊔ (∃ married.(Son ⊓ (∃ hasParent.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasChild.Grandfather)))",
            "Sister ⊔ (∃ hasParent.(Grandchild ⊔ (∃ hasSibling.Son)))",
            "(Daughter ⊔ Parent) ⊓ (∃ married.⊤)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.(Father ⊔ Grandfather))",
            "Grandfather ⊔ (∃ hasChild.(Brother ⊔ Father))",
            "Grandson ⊔ (∃ married.(Granddaughter ⊔ (∃ hasParent.Grandparent)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandfather ⊔ (∃ married.(Sister ⊔ (∃ hasChild.Daughter)))",
            "Grandparent ⊔ (∃ married.(Father ⊔ (∃ hasParent.Daughter)))",
            "∃ hasParent.(Grandchild ⊔ Grandson)",
            "∃ hasChild.(Parent ⊓ (∃ hasParent.Granddaughter))",
            "(Brother ⊔ (∃ hasChild.Granddaughter)) ⊓ (∃ hasSibling.Mother)",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasParent.Brother)))",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊔ (∃ hasChild.Grandfather)))",
            "Female ⊓ (∃ hasParent.(PersonWithASibling ⊔ (∃ hasChild.Mother)))",
            "Grandson ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Sister)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasSibling.Daughter)))",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.(Granddaughter ⊓ (∃ hasChild.Daughter)))",
            "Brother ⊔ (∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Mother)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Male)))",
            "Grandfather ⊔ (∃ hasChild.Son)",
            "Female ⊓ (∃ hasParent.(Grandson ⊔ Grandchild))",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasSibling.Brother)))",
            "Grandparent ⊔ (∃ married.(Father ⊔ (∃ hasChild.Daughter)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ hasParent.(Granddaughter ⊔ Mother))",
            "Grandson ⊓ (∃ hasParent.Male)",
            "∃ hasChild.(∃ hasChild.(∃ hasChild.Granddaughter))",
            "Grandparent ⊔ (∃ married.(Parent ⊔ (∃ hasParent.Daughter)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Brother ⊔ (∃ hasChild.Female)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandfather ⊓ (∃ hasChild.(Granddaughter ⊔ (∃ hasChild.Grandmother)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Sister ⊔ (∃ hasParent.Male)",
            "Grandson ⊔ (∃ married.(Father ⊔ Sister))",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ (∃ hasParent.Grandson)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊓ (∃ hasChild.Grandmother)))",
            "∃ hasParent.(Son ⊔ (∃ hasParent.Grandchild))",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            91.40899999999999,
            89.55199999999999,
            88.268,
            96.104,
            85.906,
            98.893,
            9.639000000000001,
            71.146,
            88.112,
            86.17899999999999,
            66.102,
            89.503,
            87.619,
            42.975,
            33.333,
            20.979,
            87.805,
            93.182,
            92.135,
            100.0,
            6.451999999999999,
            6.135,
            94.872,
            100.0,
            85.366,
            90.90899999999999,
            25.413999999999998,
            97.122,
            93.989,
            78.571,
            83.81,
            83.333,
            59.916000000000004,
            94.416,
            80.55600000000001,
            70.0,
            76.056,
            41.791,
            89.756,
            52.174,
            70.37,
            4.938,
            64.935,
            93.633,
            92.857,
            88.608,
            87.75500000000001,
            100.0
         ],
         "mean": [
            73.59531249999999
         ],
         "std": [
            27.87132794734002
         ]
      },
      "time": {
         "values": [
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773,
            0.3954106718301773
         ],
         "mean": [
            0.3954106718301773
         ],
         "std": [
            0.0
         ]
      }
   },
   "SetTransformer+GRU+LSTM": {
      "acc": {
         "values": [
            93.05600000000001,
            93.00699999999999,
            93.04599999999999,
            98.76,
            92.683,
            99.115,
            97.143,
            77.556,
            75.556,
            90.058,
            77.778,
            93.709,
            91.875,
            72.94500000000001,
            92.035,
            62.577000000000005,
            97.77799999999999,
            98.381,
            97.2,
            100.0,
            54.449999999999996,
            57.49999999999999,
            97.942,
            100.0,
            91.892,
            96.8,
            62.5,
            97.681,
            80.0,
            97.26,
            93.536,
            89.078,
            74.185,
            96.405,
            94.14200000000001,
            75.0,
            87.888,
            67.58999999999999,
            80.0,
            70.43,
            93.24900000000001,
            57.221999999999994,
            62.334,
            72.56899999999999,
            97.348,
            93.793,
            95.331,
            100.0
         ],
         "mean": [
            86.04964583333333
         ],
         "std": [
            13.497376250419908
         ]
      },
      "prediction": {
         "values": [
            "Female ⊔ (∃ hasChild.⊤)",
            "Mother ⊔ (∃ hasChild.(Brother ⊓ Grandson))",
            "Grandparent ⊔ (∃ married.(Son ⊓ (∃ hasParent.Daughter)))",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasChild.Grandfather)))",
            "Sister ⊔ (∃ hasParent.(Grandchild ⊔ (∃ hasSibling.Son)))",
            "(Daughter ⊔ Parent) ⊓ (∃ married.⊤)",
            "Female ⊓ (∃ hasSibling.(Granddaughter ⊓ (∃ hasChild.Mother)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ married.(Granddaughter ⊔ (∃ hasParent.Grandparent)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandfather ⊔ (∃ married.(Sister ⊔ (∃ hasChild.Daughter)))",
            "Grandparent ⊔ (∃ married.(Father ⊔ (∃ hasParent.Daughter)))",
            "∃ hasParent.Grandson",
            "∃ hasChild.(Parent ⊓ (∃ hasSibling.Granddaughter))",
            "(Grandfather ⊔ (∃ hasChild.Grandmother)) ⊓ (∃ hasSibling.Grandfather)",
            "Granddaughter ⊓ (∃ hasSibling.(Granddaughter ⊔ (∃ hasParent.Brother)))",
            "Grandfather ⊔ (∃ hasChild.(Grandfather ⊔ (∃ hasSibling.Grandfather)))",
            "Female ⊓ (∃ hasParent.(PersonWithASibling ⊔ (∃ hasChild.Mother)))",
            "Grandson ⊔ (∃ married.(Sister ⊔ (∃ hasSibling.Sister)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandfather ⊔ (∃ hasChild.(Grandmother ⊓ (∃ hasSibling.Grandfather)))",
            "Daughter ⊔ (∃ hasParent.(Granddaughter ⊔ (∃ hasChild.Mother)))",
            "Grandparent ⊔ (∃ married.(Granddaughter ⊓ (∃ hasChild.Daughter)))",
            "Brother ⊔ (∃ hasChild.(Granddaughter ⊓ (∃ hasSibling.Mother)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandparent ⊔ (∃ married.(Male ⊔ (∃ hasSibling.Male)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Female ⊓ (∃ hasParent.(Grandson ⊔ Grandchild))",
            "Person ⊓ (∃ married.(Daughter ⊔ (∃ hasSibling.Brother)))",
            "Grandfather ⊔ (∃ hasChild.(Father ⊔ (∃ hasChild.Daughter)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandson ⊔ (∃ hasParent.(Granddaughter ⊔ Mother))",
            "Grandson ⊓ (∃ hasParent.PersonWithASibling)",
            "∃ hasChild.Grandson",
            "Grandfather ⊔ (∃ married.(Parent ⊔ (∃ hasChild.Daughter)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Grandfather ⊓ (∃ hasChild.(Brother ⊔ (∃ hasChild.Grandmother)))",
            "Female ⊔ (∃ hasChild.⊤)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Female ⊔ (∃ hasChild.⊤)",
            "Daughter ⊔ (∃ hasParent.(Brother ⊓ (∃ hasSibling.Grandson)))",
            "Grandparent ⊔ (∃ married.(Daughter ⊓ (∃ hasChild.Grandmother)))",
            "∃ hasParent.(Son ⊔ (∃ hasParent.Grandchild))",
            "Granddaughter ⊓ (∃ hasSibling.(Mother ⊔ (∃ hasParent.Grandchild)))"
         ]
      },
      "f1": {
         "values": [
            91.40899999999999,
            86.48599999999999,
            88.268,
            96.104,
            85.906,
            98.893,
            40.0,
            70.779,
            61.404,
            86.17899999999999,
            66.102,
            89.503,
            87.619,
            21.782,
            40.0,
            3.175,
            87.805,
            95.34899999999999,
            92.135,
            100.0,
            6.451999999999999,
            6.135,
            93.506,
            100.0,
            85.366,
            90.90899999999999,
            25.413999999999998,
            97.122,
            70.492,
            78.571,
            83.81,
            78.667,
            59.916000000000004,
            94.416,
            76.667,
            28.000000000000004,
            80.597,
            41.791,
            72.32499999999999,
            52.174,
            70.37,
            4.938,
            31.730999999999998,
            61.806000000000004,
            94.017,
            88.608,
            87.75500000000001,
            100.0
         ],
         "mean": [
            69.80110416666666
         ],
         "std": [
            28.780841537991602
         ]
      },
      "time": {
         "values": [
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418,
            0.3660857280095418
         ],
         "mean": [
            0.3660857280095418
         ],
         "std": [
            0.0
         ]
      }
   }
}